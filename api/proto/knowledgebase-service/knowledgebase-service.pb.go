// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/knowledgebase-service/knowledgebase-service.proto

package knowledgebase_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteKnowledgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId string `protobuf:"bytes,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId       string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *DeleteKnowledgeReq) Reset() {
	*x = DeleteKnowledgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKnowledgeReq) ProtoMessage() {}

func (x *DeleteKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKnowledgeReq.ProtoReflect.Descriptor instead.
func (*DeleteKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteKnowledgeReq) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

func (x *DeleteKnowledgeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteKnowledgeReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type UpdateKnowledgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId string `protobuf:"bytes,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	UserId      string `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId       string `protobuf:"bytes,5,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *UpdateKnowledgeReq) Reset() {
	*x = UpdateKnowledgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKnowledgeReq) ProtoMessage() {}

func (x *UpdateKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKnowledgeReq.ProtoReflect.Descriptor instead.
func (*UpdateKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateKnowledgeReq) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

func (x *UpdateKnowledgeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateKnowledgeReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateKnowledgeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateKnowledgeReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type KnowledgeHitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId                string                `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId               string                `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Question             string                `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`                         //问题
	KnowledgeIdList      []string              `protobuf:"bytes,4,rep,name=knowledgeIdList,proto3" json:"knowledgeIdList,omitempty"`           //知识库id 列表
	KnowledgeMatchParams *KnowledgeMatchParams `protobuf:"bytes,5,opt,name=knowledgeMatchParams,proto3" json:"knowledgeMatchParams,omitempty"` //模型匹配方式
}

func (x *KnowledgeHitReq) Reset() {
	*x = KnowledgeHitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeHitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeHitReq) ProtoMessage() {}

func (x *KnowledgeHitReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeHitReq.ProtoReflect.Descriptor instead.
func (*KnowledgeHitReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{2}
}

func (x *KnowledgeHitReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *KnowledgeHitReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KnowledgeHitReq) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *KnowledgeHitReq) GetKnowledgeIdList() []string {
	if x != nil {
		return x.KnowledgeIdList
	}
	return nil
}

func (x *KnowledgeHitReq) GetKnowledgeMatchParams() *KnowledgeMatchParams {
	if x != nil {
		return x.KnowledgeMatchParams
	}
	return nil
}

type KnowledgeMatchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType         string  `protobuf:"bytes,1,opt,name=matchType,proto3" json:"matchType,omitempty"`                   //matchType：vector（向量检索）、text（文本检索）、mix（混合检索：向量+文本）
	RerankModelId     string  `protobuf:"bytes,2,opt,name=rerankModelId,proto3" json:"rerankModelId,omitempty"`           //rerank模型id
	PriorityMatch     int32   `protobuf:"varint,3,opt,name=priorityMatch,proto3" json:"priorityMatch,omitempty"`          // 权重匹配，只有在混合检索模式下，选择权重设置后，这个才设置为1
	SemanticsPriority float32 `protobuf:"fixed32,4,opt,name=semanticsPriority,proto3" json:"semanticsPriority,omitempty"` // 语义权重
	KeywordPriority   float32 `protobuf:"fixed32,5,opt,name=keywordPriority,proto3" json:"keywordPriority,omitempty"`     // 关键词权重
	TopK              int32   `protobuf:"varint,6,opt,name=topK,proto3" json:"topK,omitempty"`                            //topK 获取最高的几行
	Score             float32 `protobuf:"fixed32,7,opt,name=score,proto3" json:"score,omitempty"`                         //score 过滤分数阈值
}

func (x *KnowledgeMatchParams) Reset() {
	*x = KnowledgeMatchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeMatchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeMatchParams) ProtoMessage() {}

func (x *KnowledgeMatchParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeMatchParams.ProtoReflect.Descriptor instead.
func (*KnowledgeMatchParams) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{3}
}

func (x *KnowledgeMatchParams) GetMatchType() string {
	if x != nil {
		return x.MatchType
	}
	return ""
}

func (x *KnowledgeMatchParams) GetRerankModelId() string {
	if x != nil {
		return x.RerankModelId
	}
	return ""
}

func (x *KnowledgeMatchParams) GetPriorityMatch() int32 {
	if x != nil {
		return x.PriorityMatch
	}
	return 0
}

func (x *KnowledgeMatchParams) GetSemanticsPriority() float32 {
	if x != nil {
		return x.SemanticsPriority
	}
	return 0
}

func (x *KnowledgeMatchParams) GetKeywordPriority() float32 {
	if x != nil {
		return x.KeywordPriority
	}
	return 0
}

func (x *KnowledgeMatchParams) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *KnowledgeMatchParams) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CreateKnowledgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string              `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId              string              `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name               string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	EmbeddingModelInfo *EmbeddingModelInfo `protobuf:"bytes,5,opt,name=embeddingModelInfo,proto3" json:"embeddingModelInfo,omitempty"`
}

func (x *CreateKnowledgeReq) Reset() {
	*x = CreateKnowledgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKnowledgeReq) ProtoMessage() {}

func (x *CreateKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKnowledgeReq.ProtoReflect.Descriptor instead.
func (*CreateKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKnowledgeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateKnowledgeReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateKnowledgeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateKnowledgeReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateKnowledgeReq) GetEmbeddingModelInfo() *EmbeddingModelInfo {
	if x != nil {
		return x.EmbeddingModelInfo
	}
	return nil
}

type EmbeddingModelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId string `protobuf:"bytes,1,opt,name=modelId,proto3" json:"modelId,omitempty"`
}

func (x *EmbeddingModelInfo) Reset() {
	*x = EmbeddingModelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingModelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingModelInfo) ProtoMessage() {}

func (x *EmbeddingModelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingModelInfo.ProtoReflect.Descriptor instead.
func (*EmbeddingModelInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{5}
}

func (x *EmbeddingModelInfo) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

type CreateKnowledgeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId string `protobuf:"bytes,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
}

func (x *CreateKnowledgeResp) Reset() {
	*x = CreateKnowledgeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKnowledgeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKnowledgeResp) ProtoMessage() {}

func (x *CreateKnowledgeResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKnowledgeResp.ProtoReflect.Descriptor instead.
func (*CreateKnowledgeResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateKnowledgeResp) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

type KnowledgeSelectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId     string   `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`           //知识库名称，支持模糊搜索
	TagIdList []string `protobuf:"bytes,4,rep,name=tagIdList,proto3" json:"tagIdList,omitempty"` //知识库id 列表
}

func (x *KnowledgeSelectReq) Reset() {
	*x = KnowledgeSelectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeSelectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeSelectReq) ProtoMessage() {}

func (x *KnowledgeSelectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeSelectReq.ProtoReflect.Descriptor instead.
func (*KnowledgeSelectReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{7}
}

func (x *KnowledgeSelectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KnowledgeSelectReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *KnowledgeSelectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KnowledgeSelectReq) GetTagIdList() []string {
	if x != nil {
		return x.TagIdList
	}
	return nil
}

type KnowledgeSelectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeList []*KnowledgeInfo `protobuf:"bytes,1,rep,name=knowledgeList,proto3" json:"knowledgeList,omitempty"` //知识库列表
}

func (x *KnowledgeSelectListResp) Reset() {
	*x = KnowledgeSelectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeSelectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeSelectListResp) ProtoMessage() {}

func (x *KnowledgeSelectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeSelectListResp.ProtoReflect.Descriptor instead.
func (*KnowledgeSelectListResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{8}
}

func (x *KnowledgeSelectListResp) GetKnowledgeList() []*KnowledgeInfo {
	if x != nil {
		return x.KnowledgeList
	}
	return nil
}

type KnowledgeDetailSelectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId         string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	KnowledgeId   string `protobuf:"bytes,3,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`     //知识库id
	KnowledgeName string `protobuf:"bytes,4,opt,name=knowledgeName,proto3" json:"knowledgeName,omitempty"` // 知识库名称
}

func (x *KnowledgeDetailSelectReq) Reset() {
	*x = KnowledgeDetailSelectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeDetailSelectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeDetailSelectReq) ProtoMessage() {}

func (x *KnowledgeDetailSelectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeDetailSelectReq.ProtoReflect.Descriptor instead.
func (*KnowledgeDetailSelectReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{9}
}

func (x *KnowledgeDetailSelectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KnowledgeDetailSelectReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *KnowledgeDetailSelectReq) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

func (x *KnowledgeDetailSelectReq) GetKnowledgeName() string {
	if x != nil {
		return x.KnowledgeName
	}
	return ""
}

type KnowledgeDetailSelectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId        string   `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	KnowledgeIds []string `protobuf:"bytes,3,rep,name=knowledgeIds,proto3" json:"knowledgeIds,omitempty"` //知识库id列表
}

func (x *KnowledgeDetailSelectListReq) Reset() {
	*x = KnowledgeDetailSelectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeDetailSelectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeDetailSelectListReq) ProtoMessage() {}

func (x *KnowledgeDetailSelectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeDetailSelectListReq.ProtoReflect.Descriptor instead.
func (*KnowledgeDetailSelectListReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{10}
}

func (x *KnowledgeDetailSelectListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KnowledgeDetailSelectListReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *KnowledgeDetailSelectListReq) GetKnowledgeIds() []string {
	if x != nil {
		return x.KnowledgeIds
	}
	return nil
}

type KnowledgeDetailSelectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*KnowledgeInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 知识库详情列表
	Total int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *KnowledgeDetailSelectListResp) Reset() {
	*x = KnowledgeDetailSelectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeDetailSelectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeDetailSelectListResp) ProtoMessage() {}

func (x *KnowledgeDetailSelectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeDetailSelectListResp.ProtoReflect.Descriptor instead.
func (*KnowledgeDetailSelectListResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{11}
}

func (x *KnowledgeDetailSelectListResp) GetList() []*KnowledgeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *KnowledgeDetailSelectListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

//知识库信息
type KnowledgeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId          string              `protobuf:"bytes,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"` //知识库id
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               //知识库名称
	DocCount             int32               `protobuf:"varint,3,opt,name=docCount,proto3" json:"docCount,omitempty"`
	Description          string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	EmbeddingModelInfo   *EmbeddingModelInfo `protobuf:"bytes,5,opt,name=embeddingModelInfo,proto3" json:"embeddingModelInfo,omitempty"`
	KnowledgeTagInfoList []*KnowledgeTagInfo `protobuf:"bytes,6,rep,name=knowledgeTagInfoList,proto3" json:"knowledgeTagInfoList,omitempty"`
}

func (x *KnowledgeInfo) Reset() {
	*x = KnowledgeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeInfo) ProtoMessage() {}

func (x *KnowledgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeInfo.ProtoReflect.Descriptor instead.
func (*KnowledgeInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{12}
}

func (x *KnowledgeInfo) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

func (x *KnowledgeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KnowledgeInfo) GetDocCount() int32 {
	if x != nil {
		return x.DocCount
	}
	return 0
}

func (x *KnowledgeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KnowledgeInfo) GetEmbeddingModelInfo() *EmbeddingModelInfo {
	if x != nil {
		return x.EmbeddingModelInfo
	}
	return nil
}

func (x *KnowledgeInfo) GetKnowledgeTagInfoList() []*KnowledgeTagInfo {
	if x != nil {
		return x.KnowledgeTagInfoList
	}
	return nil
}

type KnowledgeTagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   string `protobuf:"bytes,1,opt,name=tagId,proto3" json:"tagId,omitempty"`     //知识库标签id
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"` //知识库标签名称
}

func (x *KnowledgeTagInfo) Reset() {
	*x = KnowledgeTagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeTagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeTagInfo) ProtoMessage() {}

func (x *KnowledgeTagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeTagInfo.ProtoReflect.Descriptor instead.
func (*KnowledgeTagInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{13}
}

func (x *KnowledgeTagInfo) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *KnowledgeTagInfo) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type KnowledgeHitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt     string                 `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Score      []float64              `protobuf:"fixed64,2,rep,packed,name=score,proto3" json:"score,omitempty"`
	SearchList []*KnowledgeSearchInfo `protobuf:"bytes,3,rep,name=searchList,proto3" json:"searchList,omitempty"`
}

func (x *KnowledgeHitResp) Reset() {
	*x = KnowledgeHitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeHitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeHitResp) ProtoMessage() {}

func (x *KnowledgeHitResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeHitResp.ProtoReflect.Descriptor instead.
func (*KnowledgeHitResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{14}
}

func (x *KnowledgeHitResp) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *KnowledgeHitResp) GetScore() []float64 {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *KnowledgeHitResp) GetSearchList() []*KnowledgeSearchInfo {
	if x != nil {
		return x.SearchList
	}
	return nil
}

type KnowledgeSearchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Snippet       string `protobuf:"bytes,2,opt,name=snippet,proto3" json:"snippet,omitempty"`
	KnowledgeName string `protobuf:"bytes,3,opt,name=knowledgeName,proto3" json:"knowledgeName,omitempty"`
}

func (x *KnowledgeSearchInfo) Reset() {
	*x = KnowledgeSearchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeSearchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeSearchInfo) ProtoMessage() {}

func (x *KnowledgeSearchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeSearchInfo.ProtoReflect.Descriptor instead.
func (*KnowledgeSearchInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP(), []int{15}
}

func (x *KnowledgeSearchInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *KnowledgeSearchInfo) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

func (x *KnowledgeSearchInfo) GetKnowledgeName() string {
	if x != nil {
		return x.KnowledgeName
	}
	return ""
}

var File_proto_knowledgebase_service_knowledgebase_service_proto protoreflect.FileDescriptor

var file_proto_knowledgebase_service_knowledgebase_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0xe6, 0x01, 0x0a, 0x0f, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x48, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x14, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x14, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd3,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x12, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x12, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x0a, 0x12, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x22, 0x74, 0x0a,
	0x12, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x17, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a,
	0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a,
	0x1c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x6f, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xbb, 0x02, 0x0a, 0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x12, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x5b, 0x0a, 0x14, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x42,
	0x0a, 0x10, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x48, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x6b, 0x0a, 0x13, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x86,
	0x07, 0x0a, 0x14, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x19, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x8c, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x33, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x1b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12,
	0x29, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x48, 0x69, 0x74, 0x12, 0x26, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x48, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x48, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x67, 0x5a, 0x65, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x61, 0x69, 0x2d, 0x79, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6e,
	0x2f, 0x61, 0x69, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x75, 0x73, 0x65,
	0x64, 0x2d, 0x62, 0x66, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescOnce sync.Once
	file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescData = file_proto_knowledgebase_service_knowledgebase_service_proto_rawDesc
)

func file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescGZIP() []byte {
	file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescOnce.Do(func() {
		file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescData)
	})
	return file_proto_knowledgebase_service_knowledgebase_service_proto_rawDescData
}

var file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_knowledgebase_service_knowledgebase_service_proto_goTypes = []interface{}{
	(*DeleteKnowledgeReq)(nil),            // 0: knowledgebase_service.DeleteKnowledgeReq
	(*UpdateKnowledgeReq)(nil),            // 1: knowledgebase_service.UpdateKnowledgeReq
	(*KnowledgeHitReq)(nil),               // 2: knowledgebase_service.KnowledgeHitReq
	(*KnowledgeMatchParams)(nil),          // 3: knowledgebase_service.KnowledgeMatchParams
	(*CreateKnowledgeReq)(nil),            // 4: knowledgebase_service.CreateKnowledgeReq
	(*EmbeddingModelInfo)(nil),            // 5: knowledgebase_service.EmbeddingModelInfo
	(*CreateKnowledgeResp)(nil),           // 6: knowledgebase_service.CreateKnowledgeResp
	(*KnowledgeSelectReq)(nil),            // 7: knowledgebase_service.KnowledgeSelectReq
	(*KnowledgeSelectListResp)(nil),       // 8: knowledgebase_service.KnowledgeSelectListResp
	(*KnowledgeDetailSelectReq)(nil),      // 9: knowledgebase_service.KnowledgeDetailSelectReq
	(*KnowledgeDetailSelectListReq)(nil),  // 10: knowledgebase_service.KnowledgeDetailSelectListReq
	(*KnowledgeDetailSelectListResp)(nil), // 11: knowledgebase_service.KnowledgeDetailSelectListResp
	(*KnowledgeInfo)(nil),                 // 12: knowledgebase_service.KnowledgeInfo
	(*KnowledgeTagInfo)(nil),              // 13: knowledgebase_service.KnowledgeTagInfo
	(*KnowledgeHitResp)(nil),              // 14: knowledgebase_service.KnowledgeHitResp
	(*KnowledgeSearchInfo)(nil),           // 15: knowledgebase_service.KnowledgeSearchInfo
	(*emptypb.Empty)(nil),                 // 16: google.protobuf.Empty
}
var file_proto_knowledgebase_service_knowledgebase_service_proto_depIdxs = []int32{
	3,  // 0: knowledgebase_service.KnowledgeHitReq.knowledgeMatchParams:type_name -> knowledgebase_service.KnowledgeMatchParams
	5,  // 1: knowledgebase_service.CreateKnowledgeReq.embeddingModelInfo:type_name -> knowledgebase_service.EmbeddingModelInfo
	12, // 2: knowledgebase_service.KnowledgeSelectListResp.knowledgeList:type_name -> knowledgebase_service.KnowledgeInfo
	12, // 3: knowledgebase_service.KnowledgeDetailSelectListResp.list:type_name -> knowledgebase_service.KnowledgeInfo
	5,  // 4: knowledgebase_service.KnowledgeInfo.embeddingModelInfo:type_name -> knowledgebase_service.EmbeddingModelInfo
	13, // 5: knowledgebase_service.KnowledgeInfo.knowledgeTagInfoList:type_name -> knowledgebase_service.KnowledgeTagInfo
	15, // 6: knowledgebase_service.KnowledgeHitResp.searchList:type_name -> knowledgebase_service.KnowledgeSearchInfo
	7,  // 7: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeList:input_type -> knowledgebase_service.KnowledgeSelectReq
	9,  // 8: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailById:input_type -> knowledgebase_service.KnowledgeDetailSelectReq
	10, // 9: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailByIdList:input_type -> knowledgebase_service.KnowledgeDetailSelectListReq
	9,  // 10: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailByName:input_type -> knowledgebase_service.KnowledgeDetailSelectReq
	4,  // 11: knowledgebase_service.KnowledgeBaseService.CreateKnowledge:input_type -> knowledgebase_service.CreateKnowledgeReq
	1,  // 12: knowledgebase_service.KnowledgeBaseService.UpdateKnowledge:input_type -> knowledgebase_service.UpdateKnowledgeReq
	0,  // 13: knowledgebase_service.KnowledgeBaseService.DeleteKnowledge:input_type -> knowledgebase_service.DeleteKnowledgeReq
	2,  // 14: knowledgebase_service.KnowledgeBaseService.KnowledgeHit:input_type -> knowledgebase_service.KnowledgeHitReq
	8,  // 15: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeList:output_type -> knowledgebase_service.KnowledgeSelectListResp
	12, // 16: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailById:output_type -> knowledgebase_service.KnowledgeInfo
	11, // 17: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailByIdList:output_type -> knowledgebase_service.KnowledgeDetailSelectListResp
	12, // 18: knowledgebase_service.KnowledgeBaseService.SelectKnowledgeDetailByName:output_type -> knowledgebase_service.KnowledgeInfo
	6,  // 19: knowledgebase_service.KnowledgeBaseService.CreateKnowledge:output_type -> knowledgebase_service.CreateKnowledgeResp
	16, // 20: knowledgebase_service.KnowledgeBaseService.UpdateKnowledge:output_type -> google.protobuf.Empty
	16, // 21: knowledgebase_service.KnowledgeBaseService.DeleteKnowledge:output_type -> google.protobuf.Empty
	14, // 22: knowledgebase_service.KnowledgeBaseService.KnowledgeHit:output_type -> knowledgebase_service.KnowledgeHitResp
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_knowledgebase_service_knowledgebase_service_proto_init() }
func file_proto_knowledgebase_service_knowledgebase_service_proto_init() {
	if File_proto_knowledgebase_service_knowledgebase_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKnowledgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKnowledgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeHitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeMatchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKnowledgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingModelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKnowledgeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeSelectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeSelectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeDetailSelectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeDetailSelectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeDetailSelectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeTagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeHitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeSearchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_knowledgebase_service_knowledgebase_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_knowledgebase_service_knowledgebase_service_proto_goTypes,
		DependencyIndexes: file_proto_knowledgebase_service_knowledgebase_service_proto_depIdxs,
		MessageInfos:      file_proto_knowledgebase_service_knowledgebase_service_proto_msgTypes,
	}.Build()
	File_proto_knowledgebase_service_knowledgebase_service_proto = out.File
	file_proto_knowledgebase_service_knowledgebase_service_proto_rawDesc = nil
	file_proto_knowledgebase_service_knowledgebase_service_proto_goTypes = nil
	file_proto_knowledgebase_service_knowledgebase_service_proto_depIdxs = nil
}
