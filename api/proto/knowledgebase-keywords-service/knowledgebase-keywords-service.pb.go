// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/knowledgebase-keywords-service/knowledgebase-keywords-service.proto

package knowledgebase_keywords_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Identity) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetKnowledgeKeywordsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32     `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum  int32     `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Name     string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` // 用于搜索【问题中的关键词】/【文档中的词语】
	Identity *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetKnowledgeKeywordsListReq) Reset() {
	*x = GetKnowledgeKeywordsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnowledgeKeywordsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnowledgeKeywordsListReq) ProtoMessage() {}

func (x *GetKnowledgeKeywordsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnowledgeKeywordsListReq.ProtoReflect.Descriptor instead.
func (*GetKnowledgeKeywordsListReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetKnowledgeKeywordsListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetKnowledgeKeywordsListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetKnowledgeKeywordsListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetKnowledgeKeywordsListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetKnowledgeKeywordsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords []*KeywordsInfo `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Total    int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  int32           `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32           `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetKnowledgeKeywordsListResp) Reset() {
	*x = GetKnowledgeKeywordsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnowledgeKeywordsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnowledgeKeywordsListResp) ProtoMessage() {}

func (x *GetKnowledgeKeywordsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnowledgeKeywordsListResp.ProtoReflect.Descriptor instead.
func (*GetKnowledgeKeywordsListResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetKnowledgeKeywordsListResp) GetKeywords() []*KeywordsInfo {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *GetKnowledgeKeywordsListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetKnowledgeKeywordsListResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetKnowledgeKeywordsListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type KeywordsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias              string   `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	KnowledgeBaseIds   []string `protobuf:"bytes,4,rep,name=knowledgeBaseIds,proto3" json:"knowledgeBaseIds,omitempty"`
	KnowledgeBaseNames []string `protobuf:"bytes,5,rep,name=knowledgeBaseNames,proto3" json:"knowledgeBaseNames,omitempty"`
	UpdatedAt          string   `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *KeywordsInfo) Reset() {
	*x = KeywordsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeywordsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordsInfo) ProtoMessage() {}

func (x *KeywordsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordsInfo.ProtoReflect.Descriptor instead.
func (*KeywordsInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{3}
}

func (x *KeywordsInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeywordsInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeywordsInfo) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *KeywordsInfo) GetKnowledgeBaseIds() []string {
	if x != nil {
		return x.KnowledgeBaseIds
	}
	return nil
}

func (x *KeywordsInfo) GetKnowledgeBaseNames() []string {
	if x != nil {
		return x.KnowledgeBaseNames
	}
	return nil
}

func (x *KeywordsInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateKnowledgeKeywordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alias            string    `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	KnowledgeBaseIds []string  `protobuf:"bytes,3,rep,name=knowledgeBaseIds,proto3" json:"knowledgeBaseIds,omitempty"`
	Identity         *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *CreateKnowledgeKeywordsReq) Reset() {
	*x = CreateKnowledgeKeywordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKnowledgeKeywordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKnowledgeKeywordsReq) ProtoMessage() {}

func (x *CreateKnowledgeKeywordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKnowledgeKeywordsReq.ProtoReflect.Descriptor instead.
func (*CreateKnowledgeKeywordsReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKnowledgeKeywordsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateKnowledgeKeywordsReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *CreateKnowledgeKeywordsReq) GetKnowledgeBaseIds() []string {
	if x != nil {
		return x.KnowledgeBaseIds
	}
	return nil
}

func (x *CreateKnowledgeKeywordsReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetKnowledgeKeywordsDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Identity *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetKnowledgeKeywordsDetailReq) Reset() {
	*x = GetKnowledgeKeywordsDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnowledgeKeywordsDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnowledgeKeywordsDetailReq) ProtoMessage() {}

func (x *GetKnowledgeKeywordsDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnowledgeKeywordsDetailReq.ProtoReflect.Descriptor instead.
func (*GetKnowledgeKeywordsDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetKnowledgeKeywordsDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetKnowledgeKeywordsDetailReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetKnowledgeKeywordsDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *KeywordsInfo `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GetKnowledgeKeywordsDetailResp) Reset() {
	*x = GetKnowledgeKeywordsDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnowledgeKeywordsDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnowledgeKeywordsDetailResp) ProtoMessage() {}

func (x *GetKnowledgeKeywordsDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnowledgeKeywordsDetailResp.ProtoReflect.Descriptor instead.
func (*GetKnowledgeKeywordsDetailResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetKnowledgeKeywordsDetailResp) GetDetail() *KeywordsInfo {
	if x != nil {
		return x.Detail
	}
	return nil
}

type UpdateKnowledgeKeywordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Detail *CreateKnowledgeKeywordsReq `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *UpdateKnowledgeKeywordsReq) Reset() {
	*x = UpdateKnowledgeKeywordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKnowledgeKeywordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKnowledgeKeywordsReq) ProtoMessage() {}

func (x *UpdateKnowledgeKeywordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKnowledgeKeywordsReq.ProtoReflect.Descriptor instead.
func (*UpdateKnowledgeKeywordsReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateKnowledgeKeywordsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateKnowledgeKeywordsReq) GetDetail() *CreateKnowledgeKeywordsReq {
	if x != nil {
		return x.Detail
	}
	return nil
}

type DeleteKnowledgeKeywordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteKnowledgeKeywordsReq) Reset() {
	*x = DeleteKnowledgeKeywordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKnowledgeKeywordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKnowledgeKeywordsReq) ProtoMessage() {}

func (x *DeleteKnowledgeKeywordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKnowledgeKeywordsReq.ProtoReflect.Descriptor instead.
func (*DeleteKnowledgeKeywordsReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteKnowledgeKeywordsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto protoreflect.FileDescriptor

var file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDesc = []byte{
	0x0a, 0x49, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x61, 0x73, 0x65, 0x2d, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb8,
	0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x75, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x66, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2c, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x32, 0xab, 0x05, 0x0a, 0x1c, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x3c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x3d, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x3e, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x3a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x3a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x3a, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x70, 0x5a, 0x6e, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x61, 0x69, 0x2d, 0x79, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6e,
	0x2f, 0x61, 0x69, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x75, 0x73, 0x65,
	0x64, 0x2d, 0x62, 0x66, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescOnce sync.Once
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescData = file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDesc
)

func file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescGZIP() []byte {
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescOnce.Do(func() {
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescData)
	})
	return file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDescData
}

var file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_goTypes = []interface{}{
	(*Identity)(nil),                       // 0: knowledgebase_keywords_service.Identity
	(*GetKnowledgeKeywordsListReq)(nil),    // 1: knowledgebase_keywords_service.GetKnowledgeKeywordsListReq
	(*GetKnowledgeKeywordsListResp)(nil),   // 2: knowledgebase_keywords_service.GetKnowledgeKeywordsListResp
	(*KeywordsInfo)(nil),                   // 3: knowledgebase_keywords_service.KeywordsInfo
	(*CreateKnowledgeKeywordsReq)(nil),     // 4: knowledgebase_keywords_service.CreateKnowledgeKeywordsReq
	(*GetKnowledgeKeywordsDetailReq)(nil),  // 5: knowledgebase_keywords_service.GetKnowledgeKeywordsDetailReq
	(*GetKnowledgeKeywordsDetailResp)(nil), // 6: knowledgebase_keywords_service.GetKnowledgeKeywordsDetailResp
	(*UpdateKnowledgeKeywordsReq)(nil),     // 7: knowledgebase_keywords_service.UpdateKnowledgeKeywordsReq
	(*DeleteKnowledgeKeywordsReq)(nil),     // 8: knowledgebase_keywords_service.DeleteKnowledgeKeywordsReq
	(*emptypb.Empty)(nil),                  // 9: google.protobuf.Empty
}
var file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_depIdxs = []int32{
	0,  // 0: knowledgebase_keywords_service.GetKnowledgeKeywordsListReq.identity:type_name -> knowledgebase_keywords_service.Identity
	3,  // 1: knowledgebase_keywords_service.GetKnowledgeKeywordsListResp.keywords:type_name -> knowledgebase_keywords_service.KeywordsInfo
	0,  // 2: knowledgebase_keywords_service.CreateKnowledgeKeywordsReq.identity:type_name -> knowledgebase_keywords_service.Identity
	0,  // 3: knowledgebase_keywords_service.GetKnowledgeKeywordsDetailReq.identity:type_name -> knowledgebase_keywords_service.Identity
	3,  // 4: knowledgebase_keywords_service.GetKnowledgeKeywordsDetailResp.detail:type_name -> knowledgebase_keywords_service.KeywordsInfo
	4,  // 5: knowledgebase_keywords_service.UpdateKnowledgeKeywordsReq.detail:type_name -> knowledgebase_keywords_service.CreateKnowledgeKeywordsReq
	1,  // 6: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.GetKnowledgeKeywordsList:input_type -> knowledgebase_keywords_service.GetKnowledgeKeywordsListReq
	5,  // 7: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.GetKnowledgeKeywordsDetail:input_type -> knowledgebase_keywords_service.GetKnowledgeKeywordsDetailReq
	4,  // 8: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.CreateKnowledgeKeywords:input_type -> knowledgebase_keywords_service.CreateKnowledgeKeywordsReq
	7,  // 9: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.UpdateKnowledgeKeywords:input_type -> knowledgebase_keywords_service.UpdateKnowledgeKeywordsReq
	8,  // 10: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.DeleteKnowledgeKeywords:input_type -> knowledgebase_keywords_service.DeleteKnowledgeKeywordsReq
	2,  // 11: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.GetKnowledgeKeywordsList:output_type -> knowledgebase_keywords_service.GetKnowledgeKeywordsListResp
	6,  // 12: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.GetKnowledgeKeywordsDetail:output_type -> knowledgebase_keywords_service.GetKnowledgeKeywordsDetailResp
	9,  // 13: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.CreateKnowledgeKeywords:output_type -> google.protobuf.Empty
	9,  // 14: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.UpdateKnowledgeKeywords:output_type -> google.protobuf.Empty
	9,  // 15: knowledgebase_keywords_service.KnowledgeBaseKeywordsService.DeleteKnowledgeKeywords:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_init() }
func file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_init() {
	if File_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnowledgeKeywordsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnowledgeKeywordsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeywordsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKnowledgeKeywordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnowledgeKeywordsDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnowledgeKeywordsDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKnowledgeKeywordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKnowledgeKeywordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_goTypes,
		DependencyIndexes: file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_depIdxs,
		MessageInfos:      file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_msgTypes,
	}.Build()
	File_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto = out.File
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_rawDesc = nil
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_goTypes = nil
	file_proto_knowledgebase_keywords_service_knowledgebase_keywords_service_proto_depIdxs = nil
}
