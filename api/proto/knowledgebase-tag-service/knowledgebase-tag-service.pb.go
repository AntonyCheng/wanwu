// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/knowledgebase-tag-service/knowledgebase-tag-service.proto

package knowledgebase_tag_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KnowledgeTagSelectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	TagName     string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"` //知识库标签名称，支持模糊搜索
	KnowledgeId string `protobuf:"bytes,4,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
}

func (x *KnowledgeTagSelectReq) Reset() {
	*x = KnowledgeTagSelectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeTagSelectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeTagSelectReq) ProtoMessage() {}

func (x *KnowledgeTagSelectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeTagSelectReq.ProtoReflect.Descriptor instead.
func (*KnowledgeTagSelectReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{0}
}

func (x *KnowledgeTagSelectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KnowledgeTagSelectReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *KnowledgeTagSelectReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *KnowledgeTagSelectReq) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

type KnowledgeTagSelectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeTagList []*KnowledgeTagInfo `protobuf:"bytes,1,rep,name=knowledgeTagList,proto3" json:"knowledgeTagList,omitempty"`
}

func (x *KnowledgeTagSelectListResp) Reset() {
	*x = KnowledgeTagSelectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeTagSelectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeTagSelectListResp) ProtoMessage() {}

func (x *KnowledgeTagSelectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeTagSelectListResp.ProtoReflect.Descriptor instead.
func (*KnowledgeTagSelectListResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{1}
}

func (x *KnowledgeTagSelectListResp) GetKnowledgeTagList() []*KnowledgeTagInfo {
	if x != nil {
		return x.KnowledgeTagList
	}
	return nil
}

type KnowledgeTagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId    string `protobuf:"bytes,1,opt,name=tagId,proto3" json:"tagId,omitempty"`        //知识库标签id
	TagName  string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`    //知识库标签名称
	Selected bool   `protobuf:"varint,3,opt,name=selected,proto3" json:"selected,omitempty"` //是否用户已经设置了
}

func (x *KnowledgeTagInfo) Reset() {
	*x = KnowledgeTagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeTagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeTagInfo) ProtoMessage() {}

func (x *KnowledgeTagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeTagInfo.ProtoReflect.Descriptor instead.
func (*KnowledgeTagInfo) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{2}
}

func (x *KnowledgeTagInfo) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *KnowledgeTagInfo) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *KnowledgeTagInfo) GetSelected() bool {
	if x != nil {
		return x.Selected
	}
	return false
}

type CreateKnowledgeTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId   string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *CreateKnowledgeTagReq) Reset() {
	*x = CreateKnowledgeTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKnowledgeTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKnowledgeTagReq) ProtoMessage() {}

func (x *CreateKnowledgeTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKnowledgeTagReq.ProtoReflect.Descriptor instead.
func (*CreateKnowledgeTagReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateKnowledgeTagReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateKnowledgeTagReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateKnowledgeTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type CreateKnowledgeTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId string `protobuf:"bytes,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *CreateKnowledgeTagResp) Reset() {
	*x = CreateKnowledgeTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKnowledgeTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKnowledgeTagResp) ProtoMessage() {}

func (x *CreateKnowledgeTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKnowledgeTagResp.ProtoReflect.Descriptor instead.
func (*CreateKnowledgeTagResp) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKnowledgeTagResp) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

type UpdateKnowledgeTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId   string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	TagId   string `protobuf:"bytes,4,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *UpdateKnowledgeTagReq) Reset() {
	*x = UpdateKnowledgeTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKnowledgeTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKnowledgeTagReq) ProtoMessage() {}

func (x *UpdateKnowledgeTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKnowledgeTagReq.ProtoReflect.Descriptor instead.
func (*UpdateKnowledgeTagReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateKnowledgeTagReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateKnowledgeTagReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateKnowledgeTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *UpdateKnowledgeTagReq) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

type DeleteKnowledgeTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	TagId  string `protobuf:"bytes,3,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *DeleteKnowledgeTagReq) Reset() {
	*x = DeleteKnowledgeTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKnowledgeTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKnowledgeTagReq) ProtoMessage() {}

func (x *DeleteKnowledgeTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKnowledgeTagReq.ProtoReflect.Descriptor instead.
func (*DeleteKnowledgeTagReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteKnowledgeTagReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteKnowledgeTagReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *DeleteKnowledgeTagReq) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

type BindKnowledgeTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId string   `protobuf:"bytes,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId       string   `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
	TagIdList   []string `protobuf:"bytes,4,rep,name=tagIdList,proto3" json:"tagIdList,omitempty"`
}

func (x *BindKnowledgeTagReq) Reset() {
	*x = BindKnowledgeTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindKnowledgeTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindKnowledgeTagReq) ProtoMessage() {}

func (x *BindKnowledgeTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindKnowledgeTagReq.ProtoReflect.Descriptor instead.
func (*BindKnowledgeTagReq) Descriptor() ([]byte, []int) {
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP(), []int{7}
}

func (x *BindKnowledgeTagReq) GetKnowledgeId() string {
	if x != nil {
		return x.KnowledgeId
	}
	return ""
}

func (x *BindKnowledgeTagReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BindKnowledgeTagReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *BindKnowledgeTagReq) GetTagIdList() []string {
	if x != nil {
		return x.TagIdList
	}
	return nil
}

var File_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto protoreflect.FileDescriptor

var file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x74, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2d,
	0x74, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x22, 0x75, 0x0a,
	0x1a, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x10, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x42, 0x69,
	0x6e, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x32,
	0xbe, 0x04, 0x0a, 0x17, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x16,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61,
	0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x7b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x12, 0x2e, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x6b, 0x5a, 0x69, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x69, 0x2d, 0x79, 0x75,
	0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6e, 0x2f, 0x61, 0x69, 0x2d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x75, 0x73, 0x65, 0x64, 0x2d, 0x62, 0x66, 0x66, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x2d, 0x74, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescOnce sync.Once
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescData = file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDesc
)

func file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescGZIP() []byte {
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescOnce.Do(func() {
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescData)
	})
	return file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDescData
}

var file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_goTypes = []interface{}{
	(*KnowledgeTagSelectReq)(nil),      // 0: knowledgebase_tag_service.KnowledgeTagSelectReq
	(*KnowledgeTagSelectListResp)(nil), // 1: knowledgebase_tag_service.KnowledgeTagSelectListResp
	(*KnowledgeTagInfo)(nil),           // 2: knowledgebase_tag_service.KnowledgeTagInfo
	(*CreateKnowledgeTagReq)(nil),      // 3: knowledgebase_tag_service.CreateKnowledgeTagReq
	(*CreateKnowledgeTagResp)(nil),     // 4: knowledgebase_tag_service.CreateKnowledgeTagResp
	(*UpdateKnowledgeTagReq)(nil),      // 5: knowledgebase_tag_service.UpdateKnowledgeTagReq
	(*DeleteKnowledgeTagReq)(nil),      // 6: knowledgebase_tag_service.DeleteKnowledgeTagReq
	(*BindKnowledgeTagReq)(nil),        // 7: knowledgebase_tag_service.BindKnowledgeTagReq
	(*emptypb.Empty)(nil),              // 8: google.protobuf.Empty
}
var file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_depIdxs = []int32{
	2, // 0: knowledgebase_tag_service.KnowledgeTagSelectListResp.knowledgeTagList:type_name -> knowledgebase_tag_service.KnowledgeTagInfo
	0, // 1: knowledgebase_tag_service.KnowledgeBaseTagService.SelectKnowledgeTagList:input_type -> knowledgebase_tag_service.KnowledgeTagSelectReq
	3, // 2: knowledgebase_tag_service.KnowledgeBaseTagService.CreateKnowledgeTag:input_type -> knowledgebase_tag_service.CreateKnowledgeTagReq
	5, // 3: knowledgebase_tag_service.KnowledgeBaseTagService.UpdateKnowledgeTag:input_type -> knowledgebase_tag_service.UpdateKnowledgeTagReq
	6, // 4: knowledgebase_tag_service.KnowledgeBaseTagService.DeleteKnowledgeTag:input_type -> knowledgebase_tag_service.DeleteKnowledgeTagReq
	7, // 5: knowledgebase_tag_service.KnowledgeBaseTagService.BindKnowledgeTag:input_type -> knowledgebase_tag_service.BindKnowledgeTagReq
	1, // 6: knowledgebase_tag_service.KnowledgeBaseTagService.SelectKnowledgeTagList:output_type -> knowledgebase_tag_service.KnowledgeTagSelectListResp
	4, // 7: knowledgebase_tag_service.KnowledgeBaseTagService.CreateKnowledgeTag:output_type -> knowledgebase_tag_service.CreateKnowledgeTagResp
	8, // 8: knowledgebase_tag_service.KnowledgeBaseTagService.UpdateKnowledgeTag:output_type -> google.protobuf.Empty
	8, // 9: knowledgebase_tag_service.KnowledgeBaseTagService.DeleteKnowledgeTag:output_type -> google.protobuf.Empty
	8, // 10: knowledgebase_tag_service.KnowledgeBaseTagService.BindKnowledgeTag:output_type -> google.protobuf.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_init() }
func file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_init() {
	if File_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeTagSelectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeTagSelectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeTagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKnowledgeTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKnowledgeTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKnowledgeTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKnowledgeTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindKnowledgeTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_goTypes,
		DependencyIndexes: file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_depIdxs,
		MessageInfos:      file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_msgTypes,
	}.Build()
	File_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto = out.File
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_rawDesc = nil
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_goTypes = nil
	file_proto_knowledgebase_tag_service_knowledgebase_tag_service_proto_depIdxs = nil
}
