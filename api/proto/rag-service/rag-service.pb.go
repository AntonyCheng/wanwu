// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/rag-service/rag-service.proto

package rag_service

import (
	common "github.com/UnicomAI/wanwu/api/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Identity) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type ChatRagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId    string    `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
	Question string    `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Identity *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *ChatRagReq) Reset() {
	*x = ChatRagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRagReq) ProtoMessage() {}

func (x *ChatRagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRagReq.ProtoReflect.Descriptor instead.
func (*ChatRagReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChatRagReq) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

func (x *ChatRagReq) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ChatRagReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type ChatRagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatRagResp) Reset() {
	*x = ChatRagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRagResp) ProtoMessage() {}

func (x *ChatRagResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRagResp.ProtoReflect.Descriptor instead.
func (*ChatRagResp) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRagResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateRagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId    string                 `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
	AppBrief *common.AppBriefConfig `protobuf:"bytes,2,opt,name=appBrief,proto3" json:"appBrief,omitempty"`
}

func (x *UpdateRagReq) Reset() {
	*x = UpdateRagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRagReq) ProtoMessage() {}

func (x *UpdateRagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRagReq.ProtoReflect.Descriptor instead.
func (*UpdateRagReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRagReq) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

func (x *UpdateRagReq) GetAppBrief() *common.AppBriefConfig {
	if x != nil {
		return x.AppBrief
	}
	return nil
}

type UpdateRagConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId               string                  `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
	ModelConfig         *common.AppModelConfig  `protobuf:"bytes,2,opt,name=modelConfig,proto3" json:"modelConfig,omitempty"`                 // 模型
	RerankConfig        *common.AppModelConfig  `protobuf:"bytes,3,opt,name=rerankConfig,proto3" json:"rerankConfig,omitempty"`               // Rerank模型
	KnowledgeBaseConfig *RagKnowledgeBaseConfig `protobuf:"bytes,4,opt,name=knowledgeBaseConfig,proto3" json:"knowledgeBaseConfig,omitempty"` // 知识库
	SensitiveConfig     *RagSensitiveConfig     `protobuf:"bytes,5,opt,name=sensitiveConfig,proto3" json:"sensitiveConfig,omitempty"`         // 安全护栏
}

func (x *UpdateRagConfigReq) Reset() {
	*x = UpdateRagConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRagConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRagConfigReq) ProtoMessage() {}

func (x *UpdateRagConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRagConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateRagConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRagConfigReq) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

func (x *UpdateRagConfigReq) GetModelConfig() *common.AppModelConfig {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

func (x *UpdateRagConfigReq) GetRerankConfig() *common.AppModelConfig {
	if x != nil {
		return x.RerankConfig
	}
	return nil
}

func (x *UpdateRagConfigReq) GetKnowledgeBaseConfig() *RagKnowledgeBaseConfig {
	if x != nil {
		return x.KnowledgeBaseConfig
	}
	return nil
}

func (x *UpdateRagConfigReq) GetSensitiveConfig() *RagSensitiveConfig {
	if x != nil {
		return x.SensitiveConfig
	}
	return nil
}

type CreateRagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppBrief *common.AppBriefConfig `protobuf:"bytes,1,opt,name=appBrief,proto3" json:"appBrief,omitempty"`
	Identity *Identity              `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *CreateRagReq) Reset() {
	*x = CreateRagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRagReq) ProtoMessage() {}

func (x *CreateRagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRagReq.ProtoReflect.Descriptor instead.
func (*CreateRagReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRagReq) GetAppBrief() *common.AppBriefConfig {
	if x != nil {
		return x.AppBrief
	}
	return nil
}

func (x *CreateRagReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type CreateRagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId string `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
}

func (x *CreateRagResp) Reset() {
	*x = CreateRagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRagResp) ProtoMessage() {}

func (x *CreateRagResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRagResp.ProtoReflect.Descriptor instead.
func (*CreateRagResp) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRagResp) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

type RagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId               string                  `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
	BriefConfig         *common.AppBriefConfig  `protobuf:"bytes,2,opt,name=briefConfig,proto3" json:"briefConfig,omitempty"`
	ModelConfig         *common.AppModelConfig  `protobuf:"bytes,3,opt,name=modelConfig,proto3" json:"modelConfig,omitempty"`                 // 模型
	RerankConfig        *common.AppModelConfig  `protobuf:"bytes,4,opt,name=rerankConfig,proto3" json:"rerankConfig,omitempty"`               // Rerank模型
	KnowledgeBaseConfig *RagKnowledgeBaseConfig `protobuf:"bytes,5,opt,name=knowledgeBaseConfig,proto3" json:"knowledgeBaseConfig,omitempty"` // 知识库
	SensitiveConfig     *RagSensitiveConfig     `protobuf:"bytes,6,opt,name=sensitiveConfig,proto3" json:"sensitiveConfig,omitempty"`         // 安全护栏
	Identity            *Identity               `protobuf:"bytes,7,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *RagInfo) Reset() {
	*x = RagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagInfo) ProtoMessage() {}

func (x *RagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagInfo.ProtoReflect.Descriptor instead.
func (*RagInfo) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{7}
}

func (x *RagInfo) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

func (x *RagInfo) GetBriefConfig() *common.AppBriefConfig {
	if x != nil {
		return x.BriefConfig
	}
	return nil
}

func (x *RagInfo) GetModelConfig() *common.AppModelConfig {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

func (x *RagInfo) GetRerankConfig() *common.AppModelConfig {
	if x != nil {
		return x.RerankConfig
	}
	return nil
}

func (x *RagInfo) GetKnowledgeBaseConfig() *RagKnowledgeBaseConfig {
	if x != nil {
		return x.KnowledgeBaseConfig
	}
	return nil
}

func (x *RagInfo) GetSensitiveConfig() *RagSensitiveConfig {
	if x != nil {
		return x.SensitiveConfig
	}
	return nil
}

func (x *RagInfo) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type RagDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId string `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
}

func (x *RagDeleteReq) Reset() {
	*x = RagDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagDeleteReq) ProtoMessage() {}

func (x *RagDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagDeleteReq.ProtoReflect.Descriptor instead.
func (*RagDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{8}
}

func (x *RagDeleteReq) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

type RagDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagId string `protobuf:"bytes,1,opt,name=ragId,proto3" json:"ragId,omitempty"`
}

func (x *RagDetailReq) Reset() {
	*x = RagDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagDetailReq) ProtoMessage() {}

func (x *RagDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagDetailReq.ProtoReflect.Descriptor instead.
func (*RagDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{9}
}

func (x *RagDetailReq) GetRagId() string {
	if x != nil {
		return x.RagId
	}
	return ""
}

type RagKnowledgeBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeBaseIds  []string `protobuf:"bytes,1,rep,name=knowledgeBaseIds,proto3" json:"knowledgeBaseIds,omitempty"`     // 知识库id列表
	MaxHistory        int32    `protobuf:"varint,2,opt,name=maxHistory,proto3" json:"maxHistory,omitempty"`                // 最长上下文
	Threshold         float32  `protobuf:"fixed32,3,opt,name=threshold,proto3" json:"threshold,omitempty"`                 // 过滤阈值
	TopK              int32    `protobuf:"varint,4,opt,name=topK,proto3" json:"topK,omitempty"`                            // topK
	MatchType         string   `protobuf:"bytes,5,opt,name=matchType,proto3" json:"matchType,omitempty"`                   //matchType：vector（向量检索）、text（文本检索）、mix（混合检索：向量+文本）
	KeywordPriority   float32  `protobuf:"fixed32,6,opt,name=keywordPriority,proto3" json:"keywordPriority,omitempty"`     // 关键词权重
	PriorityMatch     int32    `protobuf:"varint,7,opt,name=priorityMatch,proto3" json:"priorityMatch,omitempty"`          // 权重匹配，只有在混合检索模式下，选择权重设置后，这个才设置为1
	SemanticsPriority float32  `protobuf:"fixed32,8,opt,name=semanticsPriority,proto3" json:"semanticsPriority,omitempty"` // 语义权重
}

func (x *RagKnowledgeBaseConfig) Reset() {
	*x = RagKnowledgeBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagKnowledgeBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagKnowledgeBaseConfig) ProtoMessage() {}

func (x *RagKnowledgeBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagKnowledgeBaseConfig.ProtoReflect.Descriptor instead.
func (*RagKnowledgeBaseConfig) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{10}
}

func (x *RagKnowledgeBaseConfig) GetKnowledgeBaseIds() []string {
	if x != nil {
		return x.KnowledgeBaseIds
	}
	return nil
}

func (x *RagKnowledgeBaseConfig) GetMaxHistory() int32 {
	if x != nil {
		return x.MaxHistory
	}
	return 0
}

func (x *RagKnowledgeBaseConfig) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *RagKnowledgeBaseConfig) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *RagKnowledgeBaseConfig) GetMatchType() string {
	if x != nil {
		return x.MatchType
	}
	return ""
}

func (x *RagKnowledgeBaseConfig) GetKeywordPriority() float32 {
	if x != nil {
		return x.KeywordPriority
	}
	return 0
}

func (x *RagKnowledgeBaseConfig) GetPriorityMatch() int32 {
	if x != nil {
		return x.PriorityMatch
	}
	return 0
}

func (x *RagKnowledgeBaseConfig) GetSemanticsPriority() float32 {
	if x != nil {
		return x.SemanticsPriority
	}
	return 0
}

type RagSensitiveConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable   bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`    // 是否启用安全护栏
	TableIds []string `protobuf:"bytes,2,rep,name=tableIds,proto3" json:"tableIds,omitempty"` // 敏感词表id
}

func (x *RagSensitiveConfig) Reset() {
	*x = RagSensitiveConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagSensitiveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagSensitiveConfig) ProtoMessage() {}

func (x *RagSensitiveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagSensitiveConfig.ProtoReflect.Descriptor instead.
func (*RagSensitiveConfig) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{11}
}

func (x *RagSensitiveConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *RagSensitiveConfig) GetTableIds() []string {
	if x != nil {
		return x.TableIds
	}
	return nil
}

type RagListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Identity *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *RagListReq) Reset() {
	*x = RagListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagListReq) ProtoMessage() {}

func (x *RagListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagListReq.ProtoReflect.Descriptor instead.
func (*RagListReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{12}
}

func (x *RagListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RagListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type RagListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagInfos []*common.AppBrief `protobuf:"bytes,1,rep,name=ragInfos,proto3" json:"ragInfos,omitempty"`
	Total    int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RagListResp) Reset() {
	*x = RagListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RagListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RagListResp) ProtoMessage() {}

func (x *RagListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RagListResp.ProtoReflect.Descriptor instead.
func (*RagListResp) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{13}
}

func (x *RagListResp) GetRagInfos() []*common.AppBrief {
	if x != nil {
		return x.RagInfos
	}
	return nil
}

func (x *RagListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetRagByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagIdList []string `protobuf:"bytes,1,rep,name=ragIdList,proto3" json:"ragIdList,omitempty"`
}

func (x *GetRagByIdsReq) Reset() {
	*x = GetRagByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRagByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRagByIdsReq) ProtoMessage() {}

func (x *GetRagByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRagByIdsReq.ProtoReflect.Descriptor instead.
func (*GetRagByIdsReq) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetRagByIdsReq) GetRagIdList() []string {
	if x != nil {
		return x.RagIdList
	}
	return nil
}

type AppBriefList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RagInfos []*common.AppBrief `protobuf:"bytes,1,rep,name=ragInfos,proto3" json:"ragInfos,omitempty"`
}

func (x *AppBriefList) Reset() {
	*x = AppBriefList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rag_service_rag_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBriefList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBriefList) ProtoMessage() {}

func (x *AppBriefList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rag_service_rag_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBriefList.ProtoReflect.Descriptor instead.
func (*AppBriefList) Descriptor() ([]byte, []int) {
	return file_proto_rag_service_rag_service_proto_rawDescGZIP(), []int{15}
}

func (x *AppBriefList) GetRagInfos() []*common.AppBrief {
	if x != nil {
		return x.RagInfos
	}
	return nil
}

var File_proto_rag_service_rag_service_proto protoreflect.FileDescriptor

var file_proto_rag_service_rag_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x72, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x52, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x27, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x58, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x08, 0x61, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x22, 0xc2, 0x02, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x55, 0x0a,
	0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x61, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x75, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x61, 0x70, 0x70, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x22, 0xa4, 0x03,
	0x0a, 0x07, 0x52, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x0b, 0x62, 0x72, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x55, 0x0a, 0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72,
	0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61,
	0x67, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x61,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x67, 0x49, 0x64,
	0x22, 0xb2, 0x02, 0x0a, 0x16, 0x52, 0x61, 0x67, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x48, 0x0a, 0x12, 0x52, 0x61, 0x67, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x53, 0x0a, 0x0a, 0x52, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x51, 0x0a, 0x0b, 0x52, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x08, 0x72, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x67,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61,
	0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x61, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x08, 0x72, 0x61, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xb2, 0x04, 0x0a, 0x0a, 0x52, 0x61, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x52, 0x61, 0x67, 0x12,
	0x17, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x67, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1f, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x67, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19,
	0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x67, 0x12, 0x17, 0x2e, 0x72,
	0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x61, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x1b, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x41,
	0x49, 0x2f, 0x77, 0x61, 0x6e, 0x77, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x61, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rag_service_rag_service_proto_rawDescOnce sync.Once
	file_proto_rag_service_rag_service_proto_rawDescData = file_proto_rag_service_rag_service_proto_rawDesc
)

func file_proto_rag_service_rag_service_proto_rawDescGZIP() []byte {
	file_proto_rag_service_rag_service_proto_rawDescOnce.Do(func() {
		file_proto_rag_service_rag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rag_service_rag_service_proto_rawDescData)
	})
	return file_proto_rag_service_rag_service_proto_rawDescData
}

var file_proto_rag_service_rag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_rag_service_rag_service_proto_goTypes = []interface{}{
	(*Identity)(nil),               // 0: rag_service.Identity
	(*ChatRagReq)(nil),             // 1: rag_service.ChatRagReq
	(*ChatRagResp)(nil),            // 2: rag_service.ChatRagResp
	(*UpdateRagReq)(nil),           // 3: rag_service.UpdateRagReq
	(*UpdateRagConfigReq)(nil),     // 4: rag_service.UpdateRagConfigReq
	(*CreateRagReq)(nil),           // 5: rag_service.CreateRagReq
	(*CreateRagResp)(nil),          // 6: rag_service.CreateRagResp
	(*RagInfo)(nil),                // 7: rag_service.RagInfo
	(*RagDeleteReq)(nil),           // 8: rag_service.RagDeleteReq
	(*RagDetailReq)(nil),           // 9: rag_service.RagDetailReq
	(*RagKnowledgeBaseConfig)(nil), // 10: rag_service.RagKnowledgeBaseConfig
	(*RagSensitiveConfig)(nil),     // 11: rag_service.RagSensitiveConfig
	(*RagListReq)(nil),             // 12: rag_service.RagListReq
	(*RagListResp)(nil),            // 13: rag_service.RagListResp
	(*GetRagByIdsReq)(nil),         // 14: rag_service.GetRagByIdsReq
	(*AppBriefList)(nil),           // 15: rag_service.AppBriefList
	(*common.AppBriefConfig)(nil),  // 16: common.AppBriefConfig
	(*common.AppModelConfig)(nil),  // 17: common.AppModelConfig
	(*common.AppBrief)(nil),        // 18: common.AppBrief
	(*emptypb.Empty)(nil),          // 19: google.protobuf.Empty
}
var file_proto_rag_service_rag_service_proto_depIdxs = []int32{
	0,  // 0: rag_service.ChatRagReq.identity:type_name -> rag_service.Identity
	16, // 1: rag_service.UpdateRagReq.appBrief:type_name -> common.AppBriefConfig
	17, // 2: rag_service.UpdateRagConfigReq.modelConfig:type_name -> common.AppModelConfig
	17, // 3: rag_service.UpdateRagConfigReq.rerankConfig:type_name -> common.AppModelConfig
	10, // 4: rag_service.UpdateRagConfigReq.knowledgeBaseConfig:type_name -> rag_service.RagKnowledgeBaseConfig
	11, // 5: rag_service.UpdateRagConfigReq.sensitiveConfig:type_name -> rag_service.RagSensitiveConfig
	16, // 6: rag_service.CreateRagReq.appBrief:type_name -> common.AppBriefConfig
	0,  // 7: rag_service.CreateRagReq.identity:type_name -> rag_service.Identity
	16, // 8: rag_service.RagInfo.briefConfig:type_name -> common.AppBriefConfig
	17, // 9: rag_service.RagInfo.modelConfig:type_name -> common.AppModelConfig
	17, // 10: rag_service.RagInfo.rerankConfig:type_name -> common.AppModelConfig
	10, // 11: rag_service.RagInfo.knowledgeBaseConfig:type_name -> rag_service.RagKnowledgeBaseConfig
	11, // 12: rag_service.RagInfo.sensitiveConfig:type_name -> rag_service.RagSensitiveConfig
	0,  // 13: rag_service.RagInfo.identity:type_name -> rag_service.Identity
	0,  // 14: rag_service.RagListReq.identity:type_name -> rag_service.Identity
	18, // 15: rag_service.RagListResp.ragInfos:type_name -> common.AppBrief
	18, // 16: rag_service.AppBriefList.ragInfos:type_name -> common.AppBrief
	1,  // 17: rag_service.RagService.ChatRag:input_type -> rag_service.ChatRagReq
	5,  // 18: rag_service.RagService.CreateRag:input_type -> rag_service.CreateRagReq
	3,  // 19: rag_service.RagService.UpdateRag:input_type -> rag_service.UpdateRagReq
	4,  // 20: rag_service.RagService.UpdateRagConfig:input_type -> rag_service.UpdateRagConfigReq
	8,  // 21: rag_service.RagService.DeleteRag:input_type -> rag_service.RagDeleteReq
	9,  // 22: rag_service.RagService.GetRagDetail:input_type -> rag_service.RagDetailReq
	12, // 23: rag_service.RagService.ListRag:input_type -> rag_service.RagListReq
	14, // 24: rag_service.RagService.GetRagByIds:input_type -> rag_service.GetRagByIdsReq
	2,  // 25: rag_service.RagService.ChatRag:output_type -> rag_service.ChatRagResp
	6,  // 26: rag_service.RagService.CreateRag:output_type -> rag_service.CreateRagResp
	19, // 27: rag_service.RagService.UpdateRag:output_type -> google.protobuf.Empty
	19, // 28: rag_service.RagService.UpdateRagConfig:output_type -> google.protobuf.Empty
	19, // 29: rag_service.RagService.DeleteRag:output_type -> google.protobuf.Empty
	7,  // 30: rag_service.RagService.GetRagDetail:output_type -> rag_service.RagInfo
	13, // 31: rag_service.RagService.ListRag:output_type -> rag_service.RagListResp
	15, // 32: rag_service.RagService.GetRagByIds:output_type -> rag_service.AppBriefList
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_rag_service_rag_service_proto_init() }
func file_proto_rag_service_rag_service_proto_init() {
	if File_proto_rag_service_rag_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_rag_service_rag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRagConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagKnowledgeBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagSensitiveConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RagListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRagByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rag_service_rag_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBriefList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rag_service_rag_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rag_service_rag_service_proto_goTypes,
		DependencyIndexes: file_proto_rag_service_rag_service_proto_depIdxs,
		MessageInfos:      file_proto_rag_service_rag_service_proto_msgTypes,
	}.Build()
	File_proto_rag_service_rag_service_proto = out.File
	file_proto_rag_service_rag_service_proto_rawDesc = nil
	file_proto_rag_service_rag_service_proto_goTypes = nil
	file_proto_rag_service_rag_service_proto_depIdxs = nil
}
