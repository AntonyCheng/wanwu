// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/safety-service/safety-service.proto

package safety_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSensitiveWordTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TableName string `protobuf:"bytes,3,opt,name=tableName,proto3" json:"tableName,omitempty"` // 敏感词表名
	Remark    string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`       // 备注
}

func (x *CreateSensitiveWordTableReq) Reset() {
	*x = CreateSensitiveWordTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSensitiveWordTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSensitiveWordTableReq) ProtoMessage() {}

func (x *CreateSensitiveWordTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSensitiveWordTableReq.ProtoReflect.Descriptor instead.
func (*CreateSensitiveWordTableReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSensitiveWordTableReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateSensitiveWordTableReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSensitiveWordTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateSensitiveWordTableReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateSensitiveWordTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TableId   string `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
	TableName string `protobuf:"bytes,4,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Remark    string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"` // 备注
}

func (x *UpdateSensitiveWordTableReq) Reset() {
	*x = UpdateSensitiveWordTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSensitiveWordTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSensitiveWordTableReq) ProtoMessage() {}

func (x *UpdateSensitiveWordTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSensitiveWordTableReq.ProtoReflect.Descriptor instead.
func (*UpdateSensitiveWordTableReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateSensitiveWordTableReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateSensitiveWordTableReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateSensitiveWordTableReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TableId string `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
	Reply   string `protobuf:"bytes,4,opt,name=Reply,proto3" json:"Reply,omitempty"`     // 回复设置
}

func (x *UpdateSensitiveWordTableReplyReq) Reset() {
	*x = UpdateSensitiveWordTableReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSensitiveWordTableReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSensitiveWordTableReplyReq) ProtoMessage() {}

func (x *UpdateSensitiveWordTableReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSensitiveWordTableReplyReq.ProtoReflect.Descriptor instead.
func (*UpdateSensitiveWordTableReplyReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSensitiveWordTableReplyReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReplyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReplyReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *UpdateSensitiveWordTableReplyReq) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type DeleteSensitiveWordTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
}

func (x *DeleteSensitiveWordTableReq) Reset() {
	*x = DeleteSensitiveWordTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSensitiveWordTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSensitiveWordTableReq) ProtoMessage() {}

func (x *DeleteSensitiveWordTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSensitiveWordTableReq.ProtoReflect.Descriptor instead.
func (*DeleteSensitiveWordTableReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSensitiveWordTableReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type GetSensitiveWordTableListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetSensitiveWordTableListReq) Reset() {
	*x = GetSensitiveWordTableListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSensitiveWordTableListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSensitiveWordTableListReq) ProtoMessage() {}

func (x *GetSensitiveWordTableListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSensitiveWordTableListReq.ProtoReflect.Descriptor instead.
func (*GetSensitiveWordTableListReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSensitiveWordTableListReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetSensitiveWordTableListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UploadSensitiveVocabularyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId         string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ImportType    string `protobuf:"bytes,3,opt,name=importType,proto3" json:"importType,omitempty"`       // 上传类型
	Word          string `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`                   // 敏感词
	SensitiveType string `protobuf:"bytes,5,opt,name=sensitiveType,proto3" json:"sensitiveType,omitempty"` // 敏感词类型
	TableId       string `protobuf:"bytes,6,opt,name=tableId,proto3" json:"tableId,omitempty"`             // 敏感词表id
	FilePath      string `protobuf:"bytes,7,opt,name=filePath,proto3" json:"filePath,omitempty"`           // 文件路径
}

func (x *UploadSensitiveVocabularyReq) Reset() {
	*x = UploadSensitiveVocabularyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSensitiveVocabularyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSensitiveVocabularyReq) ProtoMessage() {}

func (x *UploadSensitiveVocabularyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSensitiveVocabularyReq.ProtoReflect.Descriptor instead.
func (*UploadSensitiveVocabularyReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadSensitiveVocabularyReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetImportType() string {
	if x != nil {
		return x.ImportType
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetSensitiveType() string {
	if x != nil {
		return x.SensitiveType
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *UploadSensitiveVocabularyReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type DeleteSensitiveVocabularyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
	WordId  string `protobuf:"bytes,2,opt,name=wordId,proto3" json:"wordId,omitempty"`   // 敏感词id
}

func (x *DeleteSensitiveVocabularyReq) Reset() {
	*x = DeleteSensitiveVocabularyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSensitiveVocabularyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSensitiveVocabularyReq) ProtoMessage() {}

func (x *DeleteSensitiveVocabularyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSensitiveVocabularyReq.ProtoReflect.Descriptor instead.
func (*DeleteSensitiveVocabularyReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSensitiveVocabularyReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *DeleteSensitiveVocabularyReq) GetWordId() string {
	if x != nil {
		return x.WordId
	}
	return ""
}

type GetSensitiveVocabularyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TableId  string `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
	PageNo   int32  `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32  `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetSensitiveVocabularyListReq) Reset() {
	*x = GetSensitiveVocabularyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSensitiveVocabularyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSensitiveVocabularyListReq) ProtoMessage() {}

func (x *GetSensitiveVocabularyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSensitiveVocabularyListReq.ProtoReflect.Descriptor instead.
func (*GetSensitiveVocabularyListReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetSensitiveVocabularyListReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetSensitiveVocabularyListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetSensitiveVocabularyListReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetSensitiveVocabularyListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetSensitiveVocabularyListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetSensitiveWordTableListByIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableIds []string `protobuf:"bytes,1,rep,name=tableIds,proto3" json:"tableIds,omitempty"` // 敏感词表id
}

func (x *GetSensitiveWordTableListByIDsReq) Reset() {
	*x = GetSensitiveWordTableListByIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSensitiveWordTableListByIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSensitiveWordTableListByIDsReq) ProtoMessage() {}

func (x *GetSensitiveWordTableListByIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSensitiveWordTableListByIDsReq.ProtoReflect.Descriptor instead.
func (*GetSensitiveWordTableListByIDsReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetSensitiveWordTableListByIDsReq) GetTableIds() []string {
	if x != nil {
		return x.TableIds
	}
	return nil
}

type GetSensitiveWordTableByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
}

func (x *GetSensitiveWordTableByIDReq) Reset() {
	*x = GetSensitiveWordTableByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSensitiveWordTableByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSensitiveWordTableByIDReq) ProtoMessage() {}

func (x *GetSensitiveWordTableByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSensitiveWordTableByIDReq.ProtoReflect.Descriptor instead.
func (*GetSensitiveWordTableByIDReq) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetSensitiveWordTableByIDReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type CreateSensitiveWordTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"` // 敏感词表id
}

func (x *CreateSensitiveWordTableResp) Reset() {
	*x = CreateSensitiveWordTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSensitiveWordTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSensitiveWordTableResp) ProtoMessage() {}

func (x *CreateSensitiveWordTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSensitiveWordTableResp.ProtoReflect.Descriptor instead.
func (*CreateSensitiveWordTableResp) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSensitiveWordTableResp) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type SensitiveWordTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SensitiveWordTable `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SensitiveWordTables) Reset() {
	*x = SensitiveWordTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordTables) ProtoMessage() {}

func (x *SensitiveWordTables) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordTables.ProtoReflect.Descriptor instead.
func (*SensitiveWordTables) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{11}
}

func (x *SensitiveWordTables) GetList() []*SensitiveWordTable {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SensitiveWordTables) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SensitiveWordTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId   string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"`
	TableName string `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Remark    string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Reply     string `protobuf:"bytes,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Version   string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *SensitiveWordTable) Reset() {
	*x = SensitiveWordTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordTable) ProtoMessage() {}

func (x *SensitiveWordTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordTable.ProtoReflect.Descriptor instead.
func (*SensitiveWordTable) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{12}
}

func (x *SensitiveWordTable) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SensitiveWordTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *SensitiveWordTable) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SensitiveWordTable) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *SensitiveWordTable) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SensitiveWordTable) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SensitiveWordVocabularyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*SensitiveWordVocabulary `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageNo   int32                      `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32                      `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *SensitiveWordVocabularyResp) Reset() {
	*x = SensitiveWordVocabularyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordVocabularyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordVocabularyResp) ProtoMessage() {}

func (x *SensitiveWordVocabularyResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordVocabularyResp.ProtoReflect.Descriptor instead.
func (*SensitiveWordVocabularyResp) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{13}
}

func (x *SensitiveWordVocabularyResp) GetList() []*SensitiveWordVocabulary {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SensitiveWordVocabularyResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SensitiveWordVocabularyResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *SensitiveWordVocabularyResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SensitiveWordVocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordId        string `protobuf:"bytes,1,opt,name=wordId,proto3" json:"wordId,omitempty"`
	Word          string `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`                   // 敏感词
	SensitiveType string `protobuf:"bytes,3,opt,name=sensitiveType,proto3" json:"sensitiveType,omitempty"` // 敏感词类型
}

func (x *SensitiveWordVocabulary) Reset() {
	*x = SensitiveWordVocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordVocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordVocabulary) ProtoMessage() {}

func (x *SensitiveWordVocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordVocabulary.ProtoReflect.Descriptor instead.
func (*SensitiveWordVocabulary) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{14}
}

func (x *SensitiveWordVocabulary) GetWordId() string {
	if x != nil {
		return x.WordId
	}
	return ""
}

func (x *SensitiveWordVocabulary) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SensitiveWordVocabulary) GetSensitiveType() string {
	if x != nil {
		return x.SensitiveType
	}
	return ""
}

type SensitiveWordTableListWithWords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SensitiveWordTableWithWords `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"` // 敏感词表带version数据
}

func (x *SensitiveWordTableListWithWords) Reset() {
	*x = SensitiveWordTableListWithWords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordTableListWithWords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordTableListWithWords) ProtoMessage() {}

func (x *SensitiveWordTableListWithWords) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordTableListWithWords.ProtoReflect.Descriptor instead.
func (*SensitiveWordTableListWithWords) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{15}
}

func (x *SensitiveWordTableListWithWords) GetDetails() []*SensitiveWordTableWithWords {
	if x != nil {
		return x.Details
	}
	return nil
}

type SensitiveWordTableWithWords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table          *SensitiveWordTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	SensitiveWords []string            `protobuf:"bytes,2,rep,name=sensitiveWords,proto3" json:"sensitiveWords,omitempty"`
}

func (x *SensitiveWordTableWithWords) Reset() {
	*x = SensitiveWordTableWithWords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_safety_service_safety_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveWordTableWithWords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveWordTableWithWords) ProtoMessage() {}

func (x *SensitiveWordTableWithWords) ProtoReflect() protoreflect.Message {
	mi := &file_proto_safety_service_safety_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveWordTableWithWords.ProtoReflect.Descriptor instead.
func (*SensitiveWordTableWithWords) Descriptor() ([]byte, []int) {
	return file_proto_safety_service_safety_service_proto_rawDescGZIP(), []int{16}
}

func (x *SensitiveWordTableWithWords) GetTable() *SensitiveWordTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *SensitiveWordTableWithWords) GetSensitiveWords() []string {
	if x != nil {
		return x.SensitiveWords
	}
	return nil
}

var File_proto_safety_service_safety_service_proto protoreflect.FileDescriptor

var file_proto_safety_service_safety_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x9b, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x80, 0x01, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x37, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x50, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x3f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x38,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb2, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6b, 0x0a, 0x17, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x7f, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x38, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x32, 0xf2, 0x09, 0x0a, 0x0d, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2b, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x73,
	0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x30, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x73,
	0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x73, 0x61,
	0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x12, 0x2c, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x12, 0x31, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x41, 0x49, 0x2f, 0x77, 0x61,
	0x6e, 0x77, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61,
	0x66, 0x65, 0x74, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_safety_service_safety_service_proto_rawDescOnce sync.Once
	file_proto_safety_service_safety_service_proto_rawDescData = file_proto_safety_service_safety_service_proto_rawDesc
)

func file_proto_safety_service_safety_service_proto_rawDescGZIP() []byte {
	file_proto_safety_service_safety_service_proto_rawDescOnce.Do(func() {
		file_proto_safety_service_safety_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_safety_service_safety_service_proto_rawDescData)
	})
	return file_proto_safety_service_safety_service_proto_rawDescData
}

var file_proto_safety_service_safety_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_safety_service_safety_service_proto_goTypes = []interface{}{
	(*CreateSensitiveWordTableReq)(nil),       // 0: safety_service.CreateSensitiveWordTableReq
	(*UpdateSensitiveWordTableReq)(nil),       // 1: safety_service.UpdateSensitiveWordTableReq
	(*UpdateSensitiveWordTableReplyReq)(nil),  // 2: safety_service.UpdateSensitiveWordTableReplyReq
	(*DeleteSensitiveWordTableReq)(nil),       // 3: safety_service.DeleteSensitiveWordTableReq
	(*GetSensitiveWordTableListReq)(nil),      // 4: safety_service.GetSensitiveWordTableListReq
	(*UploadSensitiveVocabularyReq)(nil),      // 5: safety_service.UploadSensitiveVocabularyReq
	(*DeleteSensitiveVocabularyReq)(nil),      // 6: safety_service.DeleteSensitiveVocabularyReq
	(*GetSensitiveVocabularyListReq)(nil),     // 7: safety_service.GetSensitiveVocabularyListReq
	(*GetSensitiveWordTableListByIDsReq)(nil), // 8: safety_service.GetSensitiveWordTableListByIDsReq
	(*GetSensitiveWordTableByIDReq)(nil),      // 9: safety_service.GetSensitiveWordTableByIDReq
	(*CreateSensitiveWordTableResp)(nil),      // 10: safety_service.CreateSensitiveWordTableResp
	(*SensitiveWordTables)(nil),               // 11: safety_service.SensitiveWordTables
	(*SensitiveWordTable)(nil),                // 12: safety_service.SensitiveWordTable
	(*SensitiveWordVocabularyResp)(nil),       // 13: safety_service.SensitiveWordVocabularyResp
	(*SensitiveWordVocabulary)(nil),           // 14: safety_service.SensitiveWordVocabulary
	(*SensitiveWordTableListWithWords)(nil),   // 15: safety_service.SensitiveWordTableListWithWords
	(*SensitiveWordTableWithWords)(nil),       // 16: safety_service.SensitiveWordTableWithWords
	(*emptypb.Empty)(nil),                     // 17: google.protobuf.Empty
}
var file_proto_safety_service_safety_service_proto_depIdxs = []int32{
	12, // 0: safety_service.SensitiveWordTables.list:type_name -> safety_service.SensitiveWordTable
	14, // 1: safety_service.SensitiveWordVocabularyResp.list:type_name -> safety_service.SensitiveWordVocabulary
	16, // 2: safety_service.SensitiveWordTableListWithWords.details:type_name -> safety_service.SensitiveWordTableWithWords
	12, // 3: safety_service.SensitiveWordTableWithWords.table:type_name -> safety_service.SensitiveWordTable
	0,  // 4: safety_service.SafetyService.CreateSensitiveWordTable:input_type -> safety_service.CreateSensitiveWordTableReq
	1,  // 5: safety_service.SafetyService.UpdateSensitiveWordTable:input_type -> safety_service.UpdateSensitiveWordTableReq
	2,  // 6: safety_service.SafetyService.UpdateSensitiveWordTableReply:input_type -> safety_service.UpdateSensitiveWordTableReplyReq
	3,  // 7: safety_service.SafetyService.DeleteSensitiveWordTable:input_type -> safety_service.DeleteSensitiveWordTableReq
	4,  // 8: safety_service.SafetyService.GetSensitiveWordTableList:input_type -> safety_service.GetSensitiveWordTableListReq
	8,  // 9: safety_service.SafetyService.GetSensitiveWordTableListByIDs:input_type -> safety_service.GetSensitiveWordTableListByIDsReq
	9,  // 10: safety_service.SafetyService.GetSensitiveWordTableByID:input_type -> safety_service.GetSensitiveWordTableByIDReq
	5,  // 11: safety_service.SafetyService.UploadSensitiveVocabulary:input_type -> safety_service.UploadSensitiveVocabularyReq
	6,  // 12: safety_service.SafetyService.DeleteSensitiveVocabulary:input_type -> safety_service.DeleteSensitiveVocabularyReq
	7,  // 13: safety_service.SafetyService.GetSensitiveVocabularyList:input_type -> safety_service.GetSensitiveVocabularyListReq
	8,  // 14: safety_service.SafetyService.GetSensitiveWordTableListWithWordsByIDs:input_type -> safety_service.GetSensitiveWordTableListByIDsReq
	10, // 15: safety_service.SafetyService.CreateSensitiveWordTable:output_type -> safety_service.CreateSensitiveWordTableResp
	17, // 16: safety_service.SafetyService.UpdateSensitiveWordTable:output_type -> google.protobuf.Empty
	17, // 17: safety_service.SafetyService.UpdateSensitiveWordTableReply:output_type -> google.protobuf.Empty
	17, // 18: safety_service.SafetyService.DeleteSensitiveWordTable:output_type -> google.protobuf.Empty
	11, // 19: safety_service.SafetyService.GetSensitiveWordTableList:output_type -> safety_service.SensitiveWordTables
	11, // 20: safety_service.SafetyService.GetSensitiveWordTableListByIDs:output_type -> safety_service.SensitiveWordTables
	12, // 21: safety_service.SafetyService.GetSensitiveWordTableByID:output_type -> safety_service.SensitiveWordTable
	17, // 22: safety_service.SafetyService.UploadSensitiveVocabulary:output_type -> google.protobuf.Empty
	17, // 23: safety_service.SafetyService.DeleteSensitiveVocabulary:output_type -> google.protobuf.Empty
	13, // 24: safety_service.SafetyService.GetSensitiveVocabularyList:output_type -> safety_service.SensitiveWordVocabularyResp
	15, // 25: safety_service.SafetyService.GetSensitiveWordTableListWithWordsByIDs:output_type -> safety_service.SensitiveWordTableListWithWords
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_safety_service_safety_service_proto_init() }
func file_proto_safety_service_safety_service_proto_init() {
	if File_proto_safety_service_safety_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_safety_service_safety_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSensitiveWordTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSensitiveWordTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSensitiveWordTableReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSensitiveWordTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSensitiveWordTableListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSensitiveVocabularyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSensitiveVocabularyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSensitiveVocabularyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSensitiveWordTableListByIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSensitiveWordTableByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSensitiveWordTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordVocabularyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordVocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordTableListWithWords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_safety_service_safety_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveWordTableWithWords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_safety_service_safety_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_safety_service_safety_service_proto_goTypes,
		DependencyIndexes: file_proto_safety_service_safety_service_proto_depIdxs,
		MessageInfos:      file_proto_safety_service_safety_service_proto_msgTypes,
	}.Build()
	File_proto_safety_service_safety_service_proto = out.File
	file_proto_safety_service_safety_service_proto_rawDesc = nil
	file_proto_safety_service_safety_service_proto_goTypes = nil
	file_proto_safety_service_safety_service_proto_depIdxs = nil
}
