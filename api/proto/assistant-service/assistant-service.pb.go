// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/assistant-service/assistant-service.proto

package assistant_service

import (
	common "github.com/UnicomAI/wanwu/api/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantConversionStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AssistantConversionStreamResp) Reset() {
	*x = AssistantConversionStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversionStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversionStreamResp) ProtoMessage() {}

func (x *AssistantConversionStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversionStreamResp.ProtoReflect.Descriptor instead.
func (*AssistantConversionStreamResp) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{0}
}

func (x *AssistantConversionStreamResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{1}
}

func (x *Identity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Identity) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetAssistantByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantIdList []string  `protobuf:"bytes,1,rep,name=assistantIdList,proto3" json:"assistantIdList,omitempty"`
	Identity        *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetAssistantByIdsReq) Reset() {
	*x = GetAssistantByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantByIdsReq) ProtoMessage() {}

func (x *GetAssistantByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantByIdsReq.ProtoReflect.Descriptor instead.
func (*GetAssistantByIdsReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAssistantByIdsReq) GetAssistantIdList() []string {
	if x != nil {
		return x.AssistantIdList
	}
	return nil
}

func (x *GetAssistantByIdsReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AppBriefList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantInfos []*common.AppBrief `protobuf:"bytes,1,rep,name=assistantInfos,proto3" json:"assistantInfos,omitempty"`
}

func (x *AppBriefList) Reset() {
	*x = AppBriefList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBriefList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBriefList) ProtoMessage() {}

func (x *AppBriefList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBriefList.ProtoReflect.Descriptor instead.
func (*AppBriefList) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{3}
}

func (x *AppBriefList) GetAssistantInfos() []*common.AppBrief {
	if x != nil {
		return x.AssistantInfos
	}
	return nil
}

type AssistantCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantBrief *common.AppBriefConfig `protobuf:"bytes,1,opt,name=assistantBrief,proto3" json:"assistantBrief,omitempty"`
	Identity       *Identity              `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantCreateReq) Reset() {
	*x = AssistantCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCreateReq) ProtoMessage() {}

func (x *AssistantCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCreateReq.ProtoReflect.Descriptor instead.
func (*AssistantCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{4}
}

func (x *AssistantCreateReq) GetAssistantBrief() *common.AppBriefConfig {
	if x != nil {
		return x.AssistantBrief
	}
	return nil
}

func (x *AssistantCreateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *AssistantCreateResp) Reset() {
	*x = AssistantCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCreateResp) ProtoMessage() {}

func (x *AssistantCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCreateResp.ProtoReflect.Descriptor instead.
func (*AssistantCreateResp) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{5}
}

func (x *AssistantCreateResp) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

type AssistantUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId    string                 `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	AssistantBrief *common.AppBriefConfig `protobuf:"bytes,2,opt,name=assistantBrief,proto3" json:"assistantBrief,omitempty"`
	Identity       *Identity              `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantUpdateReq) Reset() {
	*x = AssistantUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantUpdateReq) ProtoMessage() {}

func (x *AssistantUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantUpdateReq.ProtoReflect.Descriptor instead.
func (*AssistantUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{6}
}

func (x *AssistantUpdateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantUpdateReq) GetAssistantBrief() *common.AppBriefConfig {
	if x != nil {
		return x.AssistantBrief
	}
	return nil
}

func (x *AssistantUpdateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantConfigUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId         string                        `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Instructions        string                        `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"`
	Prologue            string                        `protobuf:"bytes,3,opt,name=prologue,proto3" json:"prologue,omitempty"`
	RecommendQuestion   []string                      `protobuf:"bytes,4,rep,name=recommendQuestion,proto3" json:"recommendQuestion,omitempty"`
	ModelConfig         *common.AppModelConfig        `protobuf:"bytes,5,opt,name=modelConfig,proto3" json:"modelConfig,omitempty"`                 // 模型配置
	KnowledgeBaseConfig *AssistantKnowledgeBaseConfig `protobuf:"bytes,6,opt,name=knowledgeBaseConfig,proto3" json:"knowledgeBaseConfig,omitempty"` // 知识库
	RerankConfig        *common.AppModelConfig        `protobuf:"bytes,7,opt,name=rerankConfig,proto3" json:"rerankConfig,omitempty"`               // Rerank模型
	OnlineSearchConfig  *AssistantOnlineSearchConfig  `protobuf:"bytes,8,opt,name=onlineSearchConfig,proto3" json:"onlineSearchConfig,omitempty"`   // 在线搜索配置
	Identity            *Identity                     `protobuf:"bytes,9,opt,name=identity,proto3" json:"identity,omitempty"`
	SafetyConfig        *AssistantSafetyConfig        `protobuf:"bytes,10,opt,name=safetyConfig,proto3" json:"safetyConfig,omitempty"`
}

func (x *AssistantConfigUpdateReq) Reset() {
	*x = AssistantConfigUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConfigUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConfigUpdateReq) ProtoMessage() {}

func (x *AssistantConfigUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConfigUpdateReq.ProtoReflect.Descriptor instead.
func (*AssistantConfigUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{7}
}

func (x *AssistantConfigUpdateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantConfigUpdateReq) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *AssistantConfigUpdateReq) GetPrologue() string {
	if x != nil {
		return x.Prologue
	}
	return ""
}

func (x *AssistantConfigUpdateReq) GetRecommendQuestion() []string {
	if x != nil {
		return x.RecommendQuestion
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetModelConfig() *common.AppModelConfig {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetKnowledgeBaseConfig() *AssistantKnowledgeBaseConfig {
	if x != nil {
		return x.KnowledgeBaseConfig
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetRerankConfig() *common.AppModelConfig {
	if x != nil {
		return x.RerankConfig
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetOnlineSearchConfig() *AssistantOnlineSearchConfig {
	if x != nil {
		return x.OnlineSearchConfig
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *AssistantConfigUpdateReq) GetSafetyConfig() *AssistantSafetyConfig {
	if x != nil {
		return x.SafetyConfig
	}
	return nil
}

type AssistantSafetyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable         bool              `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	SensitiveTable []*SensitiveTable `protobuf:"bytes,2,rep,name=SensitiveTable,proto3" json:"SensitiveTable,omitempty"`
}

func (x *AssistantSafetyConfig) Reset() {
	*x = AssistantSafetyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantSafetyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantSafetyConfig) ProtoMessage() {}

func (x *AssistantSafetyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantSafetyConfig.ProtoReflect.Descriptor instead.
func (*AssistantSafetyConfig) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{8}
}

func (x *AssistantSafetyConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantSafetyConfig) GetSensitiveTable() []*SensitiveTable {
	if x != nil {
		return x.SensitiveTable
	}
	return nil
}

type SensitiveTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId   string `protobuf:"bytes,1,opt,name=tableId,proto3" json:"tableId,omitempty"`
	TableName string `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
}

func (x *SensitiveTable) Reset() {
	*x = SensitiveTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensitiveTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensitiveTable) ProtoMessage() {}

func (x *SensitiveTable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensitiveTable.ProtoReflect.Descriptor instead.
func (*SensitiveTable) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{9}
}

func (x *SensitiveTable) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SensitiveTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type AssistantDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Identity    *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantDeleteReq) Reset() {
	*x = AssistantDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantDeleteReq) ProtoMessage() {}

func (x *AssistantDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantDeleteReq.ProtoReflect.Descriptor instead.
func (*AssistantDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{10}
}

func (x *AssistantDeleteReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantDeleteReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantKnowledgeBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeBaseIds  []string `protobuf:"bytes,1,rep,name=knowledgeBaseIds,proto3" json:"knowledgeBaseIds,omitempty"`     // 知识库信息
	MaxHistory        int32    `protobuf:"varint,2,opt,name=maxHistory,proto3" json:"maxHistory,omitempty"`                // 最长上下文
	Threshold         float32  `protobuf:"fixed32,3,opt,name=threshold,proto3" json:"threshold,omitempty"`                 // 过滤阈值
	TopK              int32    `protobuf:"varint,4,opt,name=topK,proto3" json:"topK,omitempty"`                            // topK
	MatchType         string   `protobuf:"bytes,5,opt,name=matchType,proto3" json:"matchType,omitempty"`                   //matchType：vector（向量检索）、text（文本检索）、mix（混合检索：向量+文本）
	KeywordPriority   float32  `protobuf:"fixed32,6,opt,name=keywordPriority,proto3" json:"keywordPriority,omitempty"`     // 关键词权重
	PriorityMatch     int32    `protobuf:"varint,7,opt,name=priorityMatch,proto3" json:"priorityMatch,omitempty"`          // 权重匹配，只有在混合检索模式下，选择权重设置后，这个才设置为1
	SemanticsPriority float32  `protobuf:"fixed32,8,opt,name=semanticsPriority,proto3" json:"semanticsPriority,omitempty"` // 语义权重
	TermWeight        float32  `protobuf:"fixed32,9,opt,name=termWeight,proto3" json:"termWeight,omitempty"`               // 关键词系数
	TermWeightEnable  bool     `protobuf:"varint,10,opt,name=termWeightEnable,proto3" json:"termWeightEnable,omitempty"`   // 关键词系数开关
}

func (x *AssistantKnowledgeBaseConfig) Reset() {
	*x = AssistantKnowledgeBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantKnowledgeBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantKnowledgeBaseConfig) ProtoMessage() {}

func (x *AssistantKnowledgeBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantKnowledgeBaseConfig.ProtoReflect.Descriptor instead.
func (*AssistantKnowledgeBaseConfig) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{11}
}

func (x *AssistantKnowledgeBaseConfig) GetKnowledgeBaseIds() []string {
	if x != nil {
		return x.KnowledgeBaseIds
	}
	return nil
}

func (x *AssistantKnowledgeBaseConfig) GetMaxHistory() int32 {
	if x != nil {
		return x.MaxHistory
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetMatchType() string {
	if x != nil {
		return x.MatchType
	}
	return ""
}

func (x *AssistantKnowledgeBaseConfig) GetKeywordPriority() float32 {
	if x != nil {
		return x.KeywordPriority
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetPriorityMatch() int32 {
	if x != nil {
		return x.PriorityMatch
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetSemanticsPriority() float32 {
	if x != nil {
		return x.SemanticsPriority
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetTermWeight() float32 {
	if x != nil {
		return x.TermWeight
	}
	return 0
}

func (x *AssistantKnowledgeBaseConfig) GetTermWeightEnable() bool {
	if x != nil {
		return x.TermWeightEnable
	}
	return false
}

type AssistantOnlineSearchConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchUrl      string `protobuf:"bytes,1,opt,name=searchUrl,proto3" json:"searchUrl,omitempty"`
	SearchKey      string `protobuf:"bytes,2,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Enable         bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	SearchRerankId string `protobuf:"bytes,4,opt,name=searchRerankId,proto3" json:"searchRerankId,omitempty"`
}

func (x *AssistantOnlineSearchConfig) Reset() {
	*x = AssistantOnlineSearchConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantOnlineSearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantOnlineSearchConfig) ProtoMessage() {}

func (x *AssistantOnlineSearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantOnlineSearchConfig.ProtoReflect.Descriptor instead.
func (*AssistantOnlineSearchConfig) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{12}
}

func (x *AssistantOnlineSearchConfig) GetSearchUrl() string {
	if x != nil {
		return x.SearchUrl
	}
	return ""
}

func (x *AssistantOnlineSearchConfig) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *AssistantOnlineSearchConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantOnlineSearchConfig) GetSearchRerankId() string {
	if x != nil {
		return x.SearchRerankId
	}
	return ""
}

type GetAssistantListMyAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Identity *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetAssistantListMyAllReq) Reset() {
	*x = GetAssistantListMyAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantListMyAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantListMyAllReq) ProtoMessage() {}

func (x *GetAssistantListMyAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantListMyAllReq.ProtoReflect.Descriptor instead.
func (*GetAssistantListMyAllReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAssistantListMyAllReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAssistantListMyAllReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId         string                        `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	AssistantBrief      *common.AppBriefConfig        `protobuf:"bytes,2,opt,name=assistantBrief,proto3" json:"assistantBrief,omitempty"`
	Prologue            string                        `protobuf:"bytes,3,opt,name=prologue,proto3" json:"prologue,omitempty"`
	Instructions        string                        `protobuf:"bytes,4,opt,name=instructions,proto3" json:"instructions,omitempty"`
	RecommendQuestion   []string                      `protobuf:"bytes,5,rep,name=recommendQuestion,proto3" json:"recommendQuestion,omitempty"`
	ModelConfig         *common.AppModelConfig        `protobuf:"bytes,6,opt,name=modelConfig,proto3" json:"modelConfig,omitempty"`                 // 模型配置
	KnowledgeBaseConfig *AssistantKnowledgeBaseConfig `protobuf:"bytes,7,opt,name=knowledgeBaseConfig,proto3" json:"knowledgeBaseConfig,omitempty"` // 知识库
	RerankConfig        *common.AppModelConfig        `protobuf:"bytes,8,opt,name=rerankConfig,proto3" json:"rerankConfig,omitempty"`               // Rerank模型
	OnlineSearchConfig  *AssistantOnlineSearchConfig  `protobuf:"bytes,9,opt,name=onlineSearchConfig,proto3" json:"onlineSearchConfig,omitempty"`   // 在线搜索配置
	Scope               int32                         `protobuf:"varint,10,opt,name=scope,proto3" json:"scope,omitempty"`
	WorkFlowInfos       []*WorkFlowInfos              `protobuf:"bytes,11,rep,name=workFlowInfos,proto3" json:"workFlowInfos,omitempty"`
	CreatTime           int64                         `protobuf:"varint,13,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	UpdateTime          int64                         `protobuf:"varint,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	SafetyConfig        *AssistantSafetyConfig        `protobuf:"bytes,15,opt,name=safetyConfig,proto3" json:"safetyConfig,omitempty"`
}

func (x *AssistantInfo) Reset() {
	*x = AssistantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantInfo) ProtoMessage() {}

func (x *AssistantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantInfo.ProtoReflect.Descriptor instead.
func (*AssistantInfo) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{14}
}

func (x *AssistantInfo) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantInfo) GetAssistantBrief() *common.AppBriefConfig {
	if x != nil {
		return x.AssistantBrief
	}
	return nil
}

func (x *AssistantInfo) GetPrologue() string {
	if x != nil {
		return x.Prologue
	}
	return ""
}

func (x *AssistantInfo) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *AssistantInfo) GetRecommendQuestion() []string {
	if x != nil {
		return x.RecommendQuestion
	}
	return nil
}

func (x *AssistantInfo) GetModelConfig() *common.AppModelConfig {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

func (x *AssistantInfo) GetKnowledgeBaseConfig() *AssistantKnowledgeBaseConfig {
	if x != nil {
		return x.KnowledgeBaseConfig
	}
	return nil
}

func (x *AssistantInfo) GetRerankConfig() *common.AppModelConfig {
	if x != nil {
		return x.RerankConfig
	}
	return nil
}

func (x *AssistantInfo) GetOnlineSearchConfig() *AssistantOnlineSearchConfig {
	if x != nil {
		return x.OnlineSearchConfig
	}
	return nil
}

func (x *AssistantInfo) GetScope() int32 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *AssistantInfo) GetWorkFlowInfos() []*WorkFlowInfos {
	if x != nil {
		return x.WorkFlowInfos
	}
	return nil
}

func (x *AssistantInfo) GetCreatTime() int64 {
	if x != nil {
		return x.CreatTime
	}
	return 0
}

func (x *AssistantInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AssistantInfo) GetSafetyConfig() *AssistantSafetyConfig {
	if x != nil {
		return x.SafetyConfig
	}
	return nil
}

type WorkFlowInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkFlowId string `protobuf:"bytes,2,opt,name=workFlowId,proto3" json:"workFlowId,omitempty"`
	ApiName    string `protobuf:"bytes,3,opt,name=apiName,proto3" json:"apiName,omitempty"`
	Enable     bool   `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *WorkFlowInfos) Reset() {
	*x = WorkFlowInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowInfos) ProtoMessage() {}

func (x *WorkFlowInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowInfos.ProtoReflect.Descriptor instead.
func (*WorkFlowInfos) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{15}
}

func (x *WorkFlowInfos) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkFlowInfos) GetWorkFlowId() string {
	if x != nil {
		return x.WorkFlowId
	}
	return ""
}

func (x *WorkFlowInfos) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *WorkFlowInfos) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type GetAssistantInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Identity    *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetAssistantInfoReq) Reset() {
	*x = GetAssistantInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantInfoReq) ProtoMessage() {}

func (x *GetAssistantInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantInfoReq.ProtoReflect.Descriptor instead.
func (*GetAssistantInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetAssistantInfoReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *GetAssistantInfoReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantWorkFlowCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Schema      string    `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	WorkFlowId  string    `protobuf:"bytes,3,opt,name=workFlowId,proto3" json:"workFlowId,omitempty"`
	Identity    *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantWorkFlowCreateReq) Reset() {
	*x = AssistantWorkFlowCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantWorkFlowCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantWorkFlowCreateReq) ProtoMessage() {}

func (x *AssistantWorkFlowCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantWorkFlowCreateReq.ProtoReflect.Descriptor instead.
func (*AssistantWorkFlowCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{17}
}

func (x *AssistantWorkFlowCreateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantWorkFlowCreateReq) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *AssistantWorkFlowCreateReq) GetWorkFlowId() string {
	if x != nil {
		return x.WorkFlowId
	}
	return ""
}

func (x *AssistantWorkFlowCreateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantWorkFlowDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	WorkFlowId  string    `protobuf:"bytes,2,opt,name=workFlowId,proto3" json:"workFlowId,omitempty"`
	Identity    *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantWorkFlowDeleteReq) Reset() {
	*x = AssistantWorkFlowDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantWorkFlowDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantWorkFlowDeleteReq) ProtoMessage() {}

func (x *AssistantWorkFlowDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantWorkFlowDeleteReq.ProtoReflect.Descriptor instead.
func (*AssistantWorkFlowDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{18}
}

func (x *AssistantWorkFlowDeleteReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantWorkFlowDeleteReq) GetWorkFlowId() string {
	if x != nil {
		return x.WorkFlowId
	}
	return ""
}

func (x *AssistantWorkFlowDeleteReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantWorkFlowEnableSwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	WorkFlowId  string    `protobuf:"bytes,2,opt,name=workFlowId,proto3" json:"workFlowId,omitempty"`
	Enable      bool      `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	Identity    *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantWorkFlowEnableSwitchReq) Reset() {
	*x = AssistantWorkFlowEnableSwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantWorkFlowEnableSwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantWorkFlowEnableSwitchReq) ProtoMessage() {}

func (x *AssistantWorkFlowEnableSwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantWorkFlowEnableSwitchReq.ProtoReflect.Descriptor instead.
func (*AssistantWorkFlowEnableSwitchReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{19}
}

func (x *AssistantWorkFlowEnableSwitchReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantWorkFlowEnableSwitchReq) GetWorkFlowId() string {
	if x != nil {
		return x.WorkFlowId
	}
	return ""
}

func (x *AssistantWorkFlowEnableSwitchReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantWorkFlowEnableSwitchReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantMCPCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	McpId       string    `protobuf:"bytes,2,opt,name=mcpId,proto3" json:"mcpId,omitempty"`
	Identity    *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantMCPCreateReq) Reset() {
	*x = AssistantMCPCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPCreateReq) ProtoMessage() {}

func (x *AssistantMCPCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPCreateReq.ProtoReflect.Descriptor instead.
func (*AssistantMCPCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{20}
}

func (x *AssistantMCPCreateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantMCPCreateReq) GetMcpId() string {
	if x != nil {
		return x.McpId
	}
	return ""
}

func (x *AssistantMCPCreateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantMCPDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	McpId       string    `protobuf:"bytes,2,opt,name=mcpId,proto3" json:"mcpId,omitempty"`
	Identity    *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantMCPDeleteReq) Reset() {
	*x = AssistantMCPDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPDeleteReq) ProtoMessage() {}

func (x *AssistantMCPDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPDeleteReq.ProtoReflect.Descriptor instead.
func (*AssistantMCPDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{21}
}

func (x *AssistantMCPDeleteReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantMCPDeleteReq) GetMcpId() string {
	if x != nil {
		return x.McpId
	}
	return ""
}

func (x *AssistantMCPDeleteReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantMCPEnableSwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	McpId       string    `protobuf:"bytes,2,opt,name=mcpId,proto3" json:"mcpId,omitempty"`
	Enable      bool      `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	Identity    *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantMCPEnableSwitchReq) Reset() {
	*x = AssistantMCPEnableSwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPEnableSwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPEnableSwitchReq) ProtoMessage() {}

func (x *AssistantMCPEnableSwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPEnableSwitchReq.ProtoReflect.Descriptor instead.
func (*AssistantMCPEnableSwitchReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{22}
}

func (x *AssistantMCPEnableSwitchReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantMCPEnableSwitchReq) GetMcpId() string {
	if x != nil {
		return x.McpId
	}
	return ""
}

func (x *AssistantMCPEnableSwitchReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantMCPEnableSwitchReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantMCPGetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Identity    *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantMCPGetListReq) Reset() {
	*x = AssistantMCPGetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPGetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPGetListReq) ProtoMessage() {}

func (x *AssistantMCPGetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPGetListReq.ProtoReflect.Descriptor instead.
func (*AssistantMCPGetListReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{23}
}

func (x *AssistantMCPGetListReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantMCPGetListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantMCPInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantMcpId uint32 `protobuf:"varint,2,opt,name=assistantMcpId,proto3" json:"assistantMcpId,omitempty"`
	McpId          string `protobuf:"bytes,3,opt,name=mcpId,proto3" json:"mcpId,omitempty"`
	Enable         bool   `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
	UserId         string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId          string `protobuf:"bytes,6,opt,name=orgId,proto3" json:"orgId,omitempty"`
	CreatedAt      int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *AssistantMCPInfo) Reset() {
	*x = AssistantMCPInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPInfo) ProtoMessage() {}

func (x *AssistantMCPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPInfo.ProtoReflect.Descriptor instead.
func (*AssistantMCPInfo) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{24}
}

func (x *AssistantMCPInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantMCPInfo) GetAssistantMcpId() uint32 {
	if x != nil {
		return x.AssistantMcpId
	}
	return 0
}

func (x *AssistantMCPInfo) GetMcpId() string {
	if x != nil {
		return x.McpId
	}
	return ""
}

func (x *AssistantMCPInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantMCPInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssistantMCPInfo) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AssistantMCPInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AssistantMCPInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AssistantMCPList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantMCPInfos []*AssistantMCPInfo `protobuf:"bytes,1,rep,name=assistantMCPInfos,proto3" json:"assistantMCPInfos,omitempty"`
}

func (x *AssistantMCPList) Reset() {
	*x = AssistantMCPList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMCPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMCPList) ProtoMessage() {}

func (x *AssistantMCPList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMCPList.ProtoReflect.Descriptor instead.
func (*AssistantMCPList) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{25}
}

func (x *AssistantMCPList) GetAssistantMCPInfos() []*AssistantMCPInfo {
	if x != nil {
		return x.AssistantMCPInfos
	}
	return nil
}

type AssistantCustomToolCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId  string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	CustomToolId string    `protobuf:"bytes,2,opt,name=customToolId,proto3" json:"customToolId,omitempty"`
	Identity     *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantCustomToolCreateReq) Reset() {
	*x = AssistantCustomToolCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolCreateReq) ProtoMessage() {}

func (x *AssistantCustomToolCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolCreateReq.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{26}
}

func (x *AssistantCustomToolCreateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantCustomToolCreateReq) GetCustomToolId() string {
	if x != nil {
		return x.CustomToolId
	}
	return ""
}

func (x *AssistantCustomToolCreateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantCustomToolDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId  string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	CustomToolId string    `protobuf:"bytes,2,opt,name=customToolId,proto3" json:"customToolId,omitempty"`
	Identity     *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantCustomToolDeleteReq) Reset() {
	*x = AssistantCustomToolDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolDeleteReq) ProtoMessage() {}

func (x *AssistantCustomToolDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolDeleteReq.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{27}
}

func (x *AssistantCustomToolDeleteReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantCustomToolDeleteReq) GetCustomToolId() string {
	if x != nil {
		return x.CustomToolId
	}
	return ""
}

func (x *AssistantCustomToolDeleteReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantCustomToolEnableSwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId  string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	CustomToolId string    `protobuf:"bytes,2,opt,name=customToolId,proto3" json:"customToolId,omitempty"`
	Enable       bool      `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	Identity     *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantCustomToolEnableSwitchReq) Reset() {
	*x = AssistantCustomToolEnableSwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolEnableSwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolEnableSwitchReq) ProtoMessage() {}

func (x *AssistantCustomToolEnableSwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolEnableSwitchReq.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolEnableSwitchReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{28}
}

func (x *AssistantCustomToolEnableSwitchReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantCustomToolEnableSwitchReq) GetCustomToolId() string {
	if x != nil {
		return x.CustomToolId
	}
	return ""
}

func (x *AssistantCustomToolEnableSwitchReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantCustomToolEnableSwitchReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantCustomToolGetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Identity    *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AssistantCustomToolGetListReq) Reset() {
	*x = AssistantCustomToolGetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolGetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolGetListReq) ProtoMessage() {}

func (x *AssistantCustomToolGetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolGetListReq.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolGetListReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{29}
}

func (x *AssistantCustomToolGetListReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantCustomToolGetListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AssistantCustomToolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId  uint32 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	CustomToolId string `protobuf:"bytes,3,opt,name=customToolId,proto3" json:"customToolId,omitempty"`
	Enable       bool   `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
	UserId       string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId        string `protobuf:"bytes,6,opt,name=orgId,proto3" json:"orgId,omitempty"`
	CreatedAt    int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *AssistantCustomToolInfo) Reset() {
	*x = AssistantCustomToolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolInfo) ProtoMessage() {}

func (x *AssistantCustomToolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolInfo.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolInfo) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{30}
}

func (x *AssistantCustomToolInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantCustomToolInfo) GetAssistantId() uint32 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantCustomToolInfo) GetCustomToolId() string {
	if x != nil {
		return x.CustomToolId
	}
	return ""
}

func (x *AssistantCustomToolInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AssistantCustomToolInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssistantCustomToolInfo) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AssistantCustomToolInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AssistantCustomToolInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AssistantCustomToolList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantCustomToolInfos []*AssistantCustomToolInfo `protobuf:"bytes,1,rep,name=assistantCustomToolInfos,proto3" json:"assistantCustomToolInfos,omitempty"`
}

func (x *AssistantCustomToolList) Reset() {
	*x = AssistantCustomToolList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantCustomToolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantCustomToolList) ProtoMessage() {}

func (x *AssistantCustomToolList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantCustomToolList.ProtoReflect.Descriptor instead.
func (*AssistantCustomToolList) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{31}
}

func (x *AssistantCustomToolList) GetAssistantCustomToolInfos() []*AssistantCustomToolInfo {
	if x != nil {
		return x.AssistantCustomToolInfos
	}
	return nil
}

type ConversationCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Prompt      string    `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Identity    *Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *ConversationCreateReq) Reset() {
	*x = ConversationCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCreateReq) ProtoMessage() {}

func (x *ConversationCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCreateReq.ProtoReflect.Descriptor instead.
func (*ConversationCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{32}
}

func (x *ConversationCreateReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *ConversationCreateReq) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ConversationCreateReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type ConversationCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
}

func (x *ConversationCreateResp) Reset() {
	*x = ConversationCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCreateResp) ProtoMessage() {}

func (x *ConversationCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCreateResp.ProtoReflect.Descriptor instead.
func (*ConversationCreateResp) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{33}
}

func (x *ConversationCreateResp) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type ConversationDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string    `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	Identity       *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *ConversationDeleteReq) Reset() {
	*x = ConversationDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationDeleteReq) ProtoMessage() {}

func (x *ConversationDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationDeleteReq.ProtoReflect.Descriptor instead.
func (*ConversationDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{34}
}

func (x *ConversationDeleteReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversationDeleteReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetConversationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	PageSize    int32     `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNo      int32     `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	Identity    *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetConversationListReq) Reset() {
	*x = GetConversationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListReq) ProtoMessage() {}

func (x *GetConversationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListReq.ProtoReflect.Descriptor instead.
func (*GetConversationListReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetConversationListReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *GetConversationListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetConversationListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetConversationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*ConversationInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize int32               `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNo   int32               `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
}

func (x *GetConversationListResp) Reset() {
	*x = GetConversationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListResp) ProtoMessage() {}

func (x *GetConversationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListResp.ProtoReflect.Descriptor instead.
func (*GetConversationListResp) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetConversationListResp) GetData() []*ConversationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetConversationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationListResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type ConversationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	AssistantId    string `protobuf:"bytes,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Title          string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	CreatTime      int64  `protobuf:"varint,4,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
}

func (x *ConversationInfo) Reset() {
	*x = ConversationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationInfo) ProtoMessage() {}

func (x *ConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationInfo.ProtoReflect.Descriptor instead.
func (*ConversationInfo) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{37}
}

func (x *ConversationInfo) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversationInfo) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *ConversationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConversationInfo) GetCreatTime() int64 {
	if x != nil {
		return x.CreatTime
	}
	return 0
}

type GetConversationDetailListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string    `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	PageSize       int32     `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNo         int32     `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	Identity       *Identity `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetConversationDetailListReq) Reset() {
	*x = GetConversationDetailListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationDetailListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationDetailListReq) ProtoMessage() {}

func (x *GetConversationDetailListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationDetailListReq.ProtoReflect.Descriptor instead.
func (*GetConversationDetailListReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetConversationDetailListReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetConversationDetailListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationDetailListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetConversationDetailListReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetConversationDetailListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*ConversionDetailInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize int32                   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNo   int32                   `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
}

func (x *GetConversationDetailListResp) Reset() {
	*x = GetConversationDetailListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationDetailListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationDetailListResp) ProtoMessage() {}

func (x *GetConversationDetailListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationDetailListResp.ProtoReflect.Descriptor instead.
func (*GetConversationDetailListResp) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetConversationDetailListResp) GetData() []*ConversionDetailInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetConversationDetailListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationDetailListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationDetailListResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type ConversionDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId     string   `protobuf:"bytes,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ConversationId  string   `protobuf:"bytes,3,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	Prompt          string   `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
	SysPrompt       string   `protobuf:"bytes,5,opt,name=sysPrompt,proto3" json:"sysPrompt,omitempty"`
	AlgPrompt       string   `protobuf:"bytes,6,opt,name=algPrompt,proto3" json:"algPrompt,omitempty"`
	RequestFileUrls []string `protobuf:"bytes,7,rep,name=requestFileUrls,proto3" json:"requestFileUrls,omitempty"`
	Response        string   `protobuf:"bytes,8,opt,name=response,proto3" json:"response,omitempty"`
	SearchList      string   `protobuf:"bytes,9,opt,name=searchList,proto3" json:"searchList,omitempty"`
	QaType          int32    `protobuf:"varint,10,opt,name=qaType,proto3" json:"qaType,omitempty"`
	CreatedBy       string   `protobuf:"bytes,11,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt       int64    `protobuf:"varint,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       int64    `protobuf:"varint,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	FileName        string   `protobuf:"bytes,14,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileFormat      string   `protobuf:"bytes,15,opt,name=fileFormat,proto3" json:"fileFormat,omitempty"`
	FileSize        int64    `protobuf:"varint,16,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (x *ConversionDetailInfo) Reset() {
	*x = ConversionDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversionDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionDetailInfo) ProtoMessage() {}

func (x *ConversionDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionDetailInfo.ProtoReflect.Descriptor instead.
func (*ConversionDetailInfo) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{40}
}

func (x *ConversionDetailInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConversionDetailInfo) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *ConversionDetailInfo) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversionDetailInfo) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ConversionDetailInfo) GetSysPrompt() string {
	if x != nil {
		return x.SysPrompt
	}
	return ""
}

func (x *ConversionDetailInfo) GetAlgPrompt() string {
	if x != nil {
		return x.AlgPrompt
	}
	return ""
}

func (x *ConversionDetailInfo) GetRequestFileUrls() []string {
	if x != nil {
		return x.RequestFileUrls
	}
	return nil
}

func (x *ConversionDetailInfo) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *ConversionDetailInfo) GetSearchList() string {
	if x != nil {
		return x.SearchList
	}
	return ""
}

func (x *ConversionDetailInfo) GetQaType() int32 {
	if x != nil {
		return x.QaType
	}
	return 0
}

func (x *ConversionDetailInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ConversionDetailInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ConversionDetailInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ConversionDetailInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ConversionDetailInfo) GetFileFormat() string {
	if x != nil {
		return x.FileFormat
	}
	return ""
}

func (x *ConversionDetailInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type AssistantConversionStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId         string                `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ConversationId      string                `protobuf:"bytes,2,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	FileInfo            *ConversionStreamFile `protobuf:"bytes,3,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	Trial               bool                  `protobuf:"varint,4,opt,name=trial,proto3" json:"trial,omitempty"`
	Prompt              string                `protobuf:"bytes,5,opt,name=prompt,proto3" json:"prompt,omitempty"`
	AppPublishType      string                `protobuf:"bytes,6,opt,name=appPublishType,proto3" json:"appPublishType,omitempty"`
	Identity            *Identity             `protobuf:"bytes,7,opt,name=identity,proto3" json:"identity,omitempty"`
	AccessedWorkFlowIds []string              `protobuf:"bytes,8,rep,name=accessedWorkFlowIds,proto3" json:"accessedWorkFlowIds,omitempty"`
}

func (x *AssistantConversionStreamReq) Reset() {
	*x = AssistantConversionStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversionStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversionStreamReq) ProtoMessage() {}

func (x *AssistantConversionStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversionStreamReq.ProtoReflect.Descriptor instead.
func (*AssistantConversionStreamReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{41}
}

func (x *AssistantConversionStreamReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *AssistantConversionStreamReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *AssistantConversionStreamReq) GetFileInfo() *ConversionStreamFile {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *AssistantConversionStreamReq) GetTrial() bool {
	if x != nil {
		return x.Trial
	}
	return false
}

func (x *AssistantConversionStreamReq) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *AssistantConversionStreamReq) GetAppPublishType() string {
	if x != nil {
		return x.AppPublishType
	}
	return ""
}

func (x *AssistantConversionStreamReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *AssistantConversionStreamReq) GetAccessedWorkFlowIds() []string {
	if x != nil {
		return x.AccessedWorkFlowIds
	}
	return nil
}

type ConversionStreamFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize int64  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileUrl  string `protobuf:"bytes,3,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
}

func (x *ConversionStreamFile) Reset() {
	*x = ConversionStreamFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversionStreamFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionStreamFile) ProtoMessage() {}

func (x *ConversionStreamFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionStreamFile.ProtoReflect.Descriptor instead.
func (*ConversionStreamFile) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{42}
}

func (x *ConversionStreamFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ConversionStreamFile) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ConversionStreamFile) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type ConversationDeleteByAssistantIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId string    `protobuf:"bytes,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Identity    *Identity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *ConversationDeleteByAssistantIdReq) Reset() {
	*x = ConversationDeleteByAssistantIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationDeleteByAssistantIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationDeleteByAssistantIdReq) ProtoMessage() {}

func (x *ConversationDeleteByAssistantIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assistant_service_assistant_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationDeleteByAssistantIdReq.ProtoReflect.Descriptor instead.
func (*ConversationDeleteByAssistantIdReq) Descriptor() ([]byte, []int) {
	return file_proto_assistant_service_assistant_service_proto_rawDescGZIP(), []int{43}
}

func (x *ConversationDeleteByAssistantIdReq) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *ConversationDeleteByAssistantIdReq) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

var File_proto_assistant_service_assistant_service_proto protoreflect.FileDescriptor

var file_proto_assistant_service_assistant_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x1d,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x22, 0x79, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x48, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a,
	0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x37, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x37, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xaf, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xea, 0x04, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x61, 0x0a, 0x13, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0c, 0x72,
	0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5e, 0x0a, 0x12, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x12, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7a,
	0x0a, 0x15, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x49, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x84, 0x03, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x73, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x74, 0x65, 0x72, 0x6d,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x1b, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x82, 0x06, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x75,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x61, 0x0a,
	0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c,
	0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5e, 0x0a, 0x12,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x71, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x1a,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x97, 0x01,
	0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x20, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x88, 0x01, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x63, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x70, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x73,
	0x0a, 0x16, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x4d, 0x43, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x63, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x63, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x63, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x65, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x11,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x9d, 0x01, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xbb, 0x01, 0x0a, 0x22, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x7a, 0x0a,
	0x1d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xf1, 0x01, 0x0a, 0x17, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x18, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54,
	0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x18, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x40,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x37, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0xf4, 0x03, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6c, 0x67, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x71, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xee, 0x02, 0x0a,
	0x1c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70,
	0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x73, 0x22, 0x68, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x7f, 0x0a, 0x22, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x32, 0xd8, 0x13, 0x0a, 0x10, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x41, 0x6c, 0x6c, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1d, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x33, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d,
	0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4d, 0x43, 0x50, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x64, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2e, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x43, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x19, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54,
	0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x1f, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x35, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x72, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x35, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x41, 0x49, 0x2f, 0x77, 0x61, 0x6e, 0x77, 0x75,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_assistant_service_assistant_service_proto_rawDescOnce sync.Once
	file_proto_assistant_service_assistant_service_proto_rawDescData = file_proto_assistant_service_assistant_service_proto_rawDesc
)

func file_proto_assistant_service_assistant_service_proto_rawDescGZIP() []byte {
	file_proto_assistant_service_assistant_service_proto_rawDescOnce.Do(func() {
		file_proto_assistant_service_assistant_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_assistant_service_assistant_service_proto_rawDescData)
	})
	return file_proto_assistant_service_assistant_service_proto_rawDescData
}

var file_proto_assistant_service_assistant_service_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_proto_assistant_service_assistant_service_proto_goTypes = []interface{}{
	(*AssistantConversionStreamResp)(nil),      // 0: assistant_service.AssistantConversionStreamResp
	(*Identity)(nil),                           // 1: assistant_service.Identity
	(*GetAssistantByIdsReq)(nil),               // 2: assistant_service.GetAssistantByIdsReq
	(*AppBriefList)(nil),                       // 3: assistant_service.AppBriefList
	(*AssistantCreateReq)(nil),                 // 4: assistant_service.AssistantCreateReq
	(*AssistantCreateResp)(nil),                // 5: assistant_service.AssistantCreateResp
	(*AssistantUpdateReq)(nil),                 // 6: assistant_service.AssistantUpdateReq
	(*AssistantConfigUpdateReq)(nil),           // 7: assistant_service.AssistantConfigUpdateReq
	(*AssistantSafetyConfig)(nil),              // 8: assistant_service.AssistantSafetyConfig
	(*SensitiveTable)(nil),                     // 9: assistant_service.SensitiveTable
	(*AssistantDeleteReq)(nil),                 // 10: assistant_service.AssistantDeleteReq
	(*AssistantKnowledgeBaseConfig)(nil),       // 11: assistant_service.AssistantKnowledgeBaseConfig
	(*AssistantOnlineSearchConfig)(nil),        // 12: assistant_service.AssistantOnlineSearchConfig
	(*GetAssistantListMyAllReq)(nil),           // 13: assistant_service.GetAssistantListMyAllReq
	(*AssistantInfo)(nil),                      // 14: assistant_service.AssistantInfo
	(*WorkFlowInfos)(nil),                      // 15: assistant_service.WorkFlowInfos
	(*GetAssistantInfoReq)(nil),                // 16: assistant_service.GetAssistantInfoReq
	(*AssistantWorkFlowCreateReq)(nil),         // 17: assistant_service.AssistantWorkFlowCreateReq
	(*AssistantWorkFlowDeleteReq)(nil),         // 18: assistant_service.AssistantWorkFlowDeleteReq
	(*AssistantWorkFlowEnableSwitchReq)(nil),   // 19: assistant_service.AssistantWorkFlowEnableSwitchReq
	(*AssistantMCPCreateReq)(nil),              // 20: assistant_service.AssistantMCPCreateReq
	(*AssistantMCPDeleteReq)(nil),              // 21: assistant_service.AssistantMCPDeleteReq
	(*AssistantMCPEnableSwitchReq)(nil),        // 22: assistant_service.AssistantMCPEnableSwitchReq
	(*AssistantMCPGetListReq)(nil),             // 23: assistant_service.AssistantMCPGetListReq
	(*AssistantMCPInfo)(nil),                   // 24: assistant_service.AssistantMCPInfo
	(*AssistantMCPList)(nil),                   // 25: assistant_service.AssistantMCPList
	(*AssistantCustomToolCreateReq)(nil),       // 26: assistant_service.AssistantCustomToolCreateReq
	(*AssistantCustomToolDeleteReq)(nil),       // 27: assistant_service.AssistantCustomToolDeleteReq
	(*AssistantCustomToolEnableSwitchReq)(nil), // 28: assistant_service.AssistantCustomToolEnableSwitchReq
	(*AssistantCustomToolGetListReq)(nil),      // 29: assistant_service.AssistantCustomToolGetListReq
	(*AssistantCustomToolInfo)(nil),            // 30: assistant_service.AssistantCustomToolInfo
	(*AssistantCustomToolList)(nil),            // 31: assistant_service.AssistantCustomToolList
	(*ConversationCreateReq)(nil),              // 32: assistant_service.ConversationCreateReq
	(*ConversationCreateResp)(nil),             // 33: assistant_service.ConversationCreateResp
	(*ConversationDeleteReq)(nil),              // 34: assistant_service.ConversationDeleteReq
	(*GetConversationListReq)(nil),             // 35: assistant_service.GetConversationListReq
	(*GetConversationListResp)(nil),            // 36: assistant_service.GetConversationListResp
	(*ConversationInfo)(nil),                   // 37: assistant_service.ConversationInfo
	(*GetConversationDetailListReq)(nil),       // 38: assistant_service.GetConversationDetailListReq
	(*GetConversationDetailListResp)(nil),      // 39: assistant_service.GetConversationDetailListResp
	(*ConversionDetailInfo)(nil),               // 40: assistant_service.ConversionDetailInfo
	(*AssistantConversionStreamReq)(nil),       // 41: assistant_service.AssistantConversionStreamReq
	(*ConversionStreamFile)(nil),               // 42: assistant_service.ConversionStreamFile
	(*ConversationDeleteByAssistantIdReq)(nil), // 43: assistant_service.ConversationDeleteByAssistantIdReq
	(*common.AppBrief)(nil),                    // 44: common.AppBrief
	(*common.AppBriefConfig)(nil),              // 45: common.AppBriefConfig
	(*common.AppModelConfig)(nil),              // 46: common.AppModelConfig
	(*emptypb.Empty)(nil),                      // 47: google.protobuf.Empty
}
var file_proto_assistant_service_assistant_service_proto_depIdxs = []int32{
	1,  // 0: assistant_service.GetAssistantByIdsReq.identity:type_name -> assistant_service.Identity
	44, // 1: assistant_service.AppBriefList.assistantInfos:type_name -> common.AppBrief
	45, // 2: assistant_service.AssistantCreateReq.assistantBrief:type_name -> common.AppBriefConfig
	1,  // 3: assistant_service.AssistantCreateReq.identity:type_name -> assistant_service.Identity
	45, // 4: assistant_service.AssistantUpdateReq.assistantBrief:type_name -> common.AppBriefConfig
	1,  // 5: assistant_service.AssistantUpdateReq.identity:type_name -> assistant_service.Identity
	46, // 6: assistant_service.AssistantConfigUpdateReq.modelConfig:type_name -> common.AppModelConfig
	11, // 7: assistant_service.AssistantConfigUpdateReq.knowledgeBaseConfig:type_name -> assistant_service.AssistantKnowledgeBaseConfig
	46, // 8: assistant_service.AssistantConfigUpdateReq.rerankConfig:type_name -> common.AppModelConfig
	12, // 9: assistant_service.AssistantConfigUpdateReq.onlineSearchConfig:type_name -> assistant_service.AssistantOnlineSearchConfig
	1,  // 10: assistant_service.AssistantConfigUpdateReq.identity:type_name -> assistant_service.Identity
	8,  // 11: assistant_service.AssistantConfigUpdateReq.safetyConfig:type_name -> assistant_service.AssistantSafetyConfig
	9,  // 12: assistant_service.AssistantSafetyConfig.SensitiveTable:type_name -> assistant_service.SensitiveTable
	1,  // 13: assistant_service.AssistantDeleteReq.identity:type_name -> assistant_service.Identity
	1,  // 14: assistant_service.GetAssistantListMyAllReq.identity:type_name -> assistant_service.Identity
	45, // 15: assistant_service.AssistantInfo.assistantBrief:type_name -> common.AppBriefConfig
	46, // 16: assistant_service.AssistantInfo.modelConfig:type_name -> common.AppModelConfig
	11, // 17: assistant_service.AssistantInfo.knowledgeBaseConfig:type_name -> assistant_service.AssistantKnowledgeBaseConfig
	46, // 18: assistant_service.AssistantInfo.rerankConfig:type_name -> common.AppModelConfig
	12, // 19: assistant_service.AssistantInfo.onlineSearchConfig:type_name -> assistant_service.AssistantOnlineSearchConfig
	15, // 20: assistant_service.AssistantInfo.workFlowInfos:type_name -> assistant_service.WorkFlowInfos
	8,  // 21: assistant_service.AssistantInfo.safetyConfig:type_name -> assistant_service.AssistantSafetyConfig
	1,  // 22: assistant_service.GetAssistantInfoReq.identity:type_name -> assistant_service.Identity
	1,  // 23: assistant_service.AssistantWorkFlowCreateReq.identity:type_name -> assistant_service.Identity
	1,  // 24: assistant_service.AssistantWorkFlowDeleteReq.identity:type_name -> assistant_service.Identity
	1,  // 25: assistant_service.AssistantWorkFlowEnableSwitchReq.identity:type_name -> assistant_service.Identity
	1,  // 26: assistant_service.AssistantMCPCreateReq.identity:type_name -> assistant_service.Identity
	1,  // 27: assistant_service.AssistantMCPDeleteReq.identity:type_name -> assistant_service.Identity
	1,  // 28: assistant_service.AssistantMCPEnableSwitchReq.identity:type_name -> assistant_service.Identity
	1,  // 29: assistant_service.AssistantMCPGetListReq.identity:type_name -> assistant_service.Identity
	24, // 30: assistant_service.AssistantMCPList.assistantMCPInfos:type_name -> assistant_service.AssistantMCPInfo
	1,  // 31: assistant_service.AssistantCustomToolCreateReq.identity:type_name -> assistant_service.Identity
	1,  // 32: assistant_service.AssistantCustomToolDeleteReq.identity:type_name -> assistant_service.Identity
	1,  // 33: assistant_service.AssistantCustomToolEnableSwitchReq.identity:type_name -> assistant_service.Identity
	1,  // 34: assistant_service.AssistantCustomToolGetListReq.identity:type_name -> assistant_service.Identity
	30, // 35: assistant_service.AssistantCustomToolList.assistantCustomToolInfos:type_name -> assistant_service.AssistantCustomToolInfo
	1,  // 36: assistant_service.ConversationCreateReq.identity:type_name -> assistant_service.Identity
	1,  // 37: assistant_service.ConversationDeleteReq.identity:type_name -> assistant_service.Identity
	1,  // 38: assistant_service.GetConversationListReq.identity:type_name -> assistant_service.Identity
	37, // 39: assistant_service.GetConversationListResp.data:type_name -> assistant_service.ConversationInfo
	1,  // 40: assistant_service.GetConversationDetailListReq.identity:type_name -> assistant_service.Identity
	40, // 41: assistant_service.GetConversationDetailListResp.data:type_name -> assistant_service.ConversionDetailInfo
	42, // 42: assistant_service.AssistantConversionStreamReq.fileInfo:type_name -> assistant_service.ConversionStreamFile
	1,  // 43: assistant_service.AssistantConversionStreamReq.identity:type_name -> assistant_service.Identity
	1,  // 44: assistant_service.ConversationDeleteByAssistantIdReq.identity:type_name -> assistant_service.Identity
	2,  // 45: assistant_service.AssistantService.GetAssistantByIds:input_type -> assistant_service.GetAssistantByIdsReq
	4,  // 46: assistant_service.AssistantService.AssistantCreate:input_type -> assistant_service.AssistantCreateReq
	6,  // 47: assistant_service.AssistantService.AssistantUpdate:input_type -> assistant_service.AssistantUpdateReq
	7,  // 48: assistant_service.AssistantService.AssistantConfigUpdate:input_type -> assistant_service.AssistantConfigUpdateReq
	10, // 49: assistant_service.AssistantService.AssistantDelete:input_type -> assistant_service.AssistantDeleteReq
	13, // 50: assistant_service.AssistantService.GetAssistantListMyAll:input_type -> assistant_service.GetAssistantListMyAllReq
	16, // 51: assistant_service.AssistantService.GetAssistantInfo:input_type -> assistant_service.GetAssistantInfoReq
	17, // 52: assistant_service.AssistantService.AssistantWorkFlowCreate:input_type -> assistant_service.AssistantWorkFlowCreateReq
	18, // 53: assistant_service.AssistantService.AssistantWorkFlowDelete:input_type -> assistant_service.AssistantWorkFlowDeleteReq
	19, // 54: assistant_service.AssistantService.AssistantWorkFlowEnableSwitch:input_type -> assistant_service.AssistantWorkFlowEnableSwitchReq
	20, // 55: assistant_service.AssistantService.AssistantMCPCreate:input_type -> assistant_service.AssistantMCPCreateReq
	21, // 56: assistant_service.AssistantService.AssistantMCPDelete:input_type -> assistant_service.AssistantMCPDeleteReq
	22, // 57: assistant_service.AssistantService.AssistantMCPEnableSwitch:input_type -> assistant_service.AssistantMCPEnableSwitchReq
	23, // 58: assistant_service.AssistantService.AssistantMCPGetList:input_type -> assistant_service.AssistantMCPGetListReq
	26, // 59: assistant_service.AssistantService.AssistantCustomToolCreate:input_type -> assistant_service.AssistantCustomToolCreateReq
	27, // 60: assistant_service.AssistantService.AssistantCustomToolDelete:input_type -> assistant_service.AssistantCustomToolDeleteReq
	28, // 61: assistant_service.AssistantService.AssistantCustomToolEnableSwitch:input_type -> assistant_service.AssistantCustomToolEnableSwitchReq
	29, // 62: assistant_service.AssistantService.AssistantCustomToolGetList:input_type -> assistant_service.AssistantCustomToolGetListReq
	32, // 63: assistant_service.AssistantService.ConversationCreate:input_type -> assistant_service.ConversationCreateReq
	34, // 64: assistant_service.AssistantService.ConversationDelete:input_type -> assistant_service.ConversationDeleteReq
	35, // 65: assistant_service.AssistantService.GetConversationList:input_type -> assistant_service.GetConversationListReq
	38, // 66: assistant_service.AssistantService.GetConversationDetailList:input_type -> assistant_service.GetConversationDetailListReq
	41, // 67: assistant_service.AssistantService.AssistantConversionStream:input_type -> assistant_service.AssistantConversionStreamReq
	43, // 68: assistant_service.AssistantService.ConversationDeleteByAssistantId:input_type -> assistant_service.ConversationDeleteByAssistantIdReq
	3,  // 69: assistant_service.AssistantService.GetAssistantByIds:output_type -> assistant_service.AppBriefList
	5,  // 70: assistant_service.AssistantService.AssistantCreate:output_type -> assistant_service.AssistantCreateResp
	47, // 71: assistant_service.AssistantService.AssistantUpdate:output_type -> google.protobuf.Empty
	47, // 72: assistant_service.AssistantService.AssistantConfigUpdate:output_type -> google.protobuf.Empty
	47, // 73: assistant_service.AssistantService.AssistantDelete:output_type -> google.protobuf.Empty
	3,  // 74: assistant_service.AssistantService.GetAssistantListMyAll:output_type -> assistant_service.AppBriefList
	14, // 75: assistant_service.AssistantService.GetAssistantInfo:output_type -> assistant_service.AssistantInfo
	47, // 76: assistant_service.AssistantService.AssistantWorkFlowCreate:output_type -> google.protobuf.Empty
	47, // 77: assistant_service.AssistantService.AssistantWorkFlowDelete:output_type -> google.protobuf.Empty
	47, // 78: assistant_service.AssistantService.AssistantWorkFlowEnableSwitch:output_type -> google.protobuf.Empty
	47, // 79: assistant_service.AssistantService.AssistantMCPCreate:output_type -> google.protobuf.Empty
	47, // 80: assistant_service.AssistantService.AssistantMCPDelete:output_type -> google.protobuf.Empty
	47, // 81: assistant_service.AssistantService.AssistantMCPEnableSwitch:output_type -> google.protobuf.Empty
	25, // 82: assistant_service.AssistantService.AssistantMCPGetList:output_type -> assistant_service.AssistantMCPList
	47, // 83: assistant_service.AssistantService.AssistantCustomToolCreate:output_type -> google.protobuf.Empty
	47, // 84: assistant_service.AssistantService.AssistantCustomToolDelete:output_type -> google.protobuf.Empty
	47, // 85: assistant_service.AssistantService.AssistantCustomToolEnableSwitch:output_type -> google.protobuf.Empty
	31, // 86: assistant_service.AssistantService.AssistantCustomToolGetList:output_type -> assistant_service.AssistantCustomToolList
	33, // 87: assistant_service.AssistantService.ConversationCreate:output_type -> assistant_service.ConversationCreateResp
	47, // 88: assistant_service.AssistantService.ConversationDelete:output_type -> google.protobuf.Empty
	36, // 89: assistant_service.AssistantService.GetConversationList:output_type -> assistant_service.GetConversationListResp
	39, // 90: assistant_service.AssistantService.GetConversationDetailList:output_type -> assistant_service.GetConversationDetailListResp
	0,  // 91: assistant_service.AssistantService.AssistantConversionStream:output_type -> assistant_service.AssistantConversionStreamResp
	47, // 92: assistant_service.AssistantService.ConversationDeleteByAssistantId:output_type -> google.protobuf.Empty
	69, // [69:93] is the sub-list for method output_type
	45, // [45:69] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_proto_assistant_service_assistant_service_proto_init() }
func file_proto_assistant_service_assistant_service_proto_init() {
	if File_proto_assistant_service_assistant_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_assistant_service_assistant_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantConversionStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssistantByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBriefList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantConfigUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantSafetyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensitiveTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantKnowledgeBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantOnlineSearchConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssistantListMyAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssistantInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantWorkFlowCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantWorkFlowDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantWorkFlowEnableSwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPEnableSwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPGetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMCPList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolEnableSwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolGetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantCustomToolList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationDetailListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationDetailListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversionDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantConversionStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversionStreamFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_assistant_service_assistant_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationDeleteByAssistantIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_assistant_service_assistant_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_assistant_service_assistant_service_proto_goTypes,
		DependencyIndexes: file_proto_assistant_service_assistant_service_proto_depIdxs,
		MessageInfos:      file_proto_assistant_service_assistant_service_proto_msgTypes,
	}.Build()
	File_proto_assistant_service_assistant_service_proto = out.File
	file_proto_assistant_service_assistant_service_proto_rawDesc = nil
	file_proto_assistant_service_assistant_service_proto_goTypes = nil
	file_proto_assistant_service_assistant_service_proto_depIdxs = nil
}
